/**
 * Dyna Quest
 * Dyna Quest is an Online Education Website Template Kit
 * Exclusively on https://1.envato.market/Dyna Quest-html
 *
 * @encoding        UTF-8
 * @version         1.0.0
 * @copyright       (C) 2018 - 2022 A. KOMANE ( https://merkulov.design/ ). All rights reserved.
 * @license         Envato License https://1.envato.market/KYbje
 * @contributors    Lamber Lilith (winter.rituel@gmail.com)
 * @support         help@merkulov.design
 **/
(() => {
    var t = {
            764: function(t) {
                t.exports = function() {
                    "use strict";
                    const t = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }),
                        e = "SweetAlert2:",
                        n = t => { const e = []; for (let n = 0; n < t.length; n++) - 1 === e.indexOf(t[n]) && e.push(t[n]); return e },
                        i = t => t.charAt(0).toUpperCase() + t.slice(1),
                        o = t => Array.prototype.slice.call(t),
                        s = t => { console.warn("".concat(e, " ").concat("object" == typeof t ? t.join(" ") : t)) },
                        r = t => { console.error("".concat(e, " ").concat(t)) },
                        a = [],
                        l = t => { a.includes(t) || (a.push(t), s(t)) },
                        c = (t, e) => { l('"'.concat(t, '" is deprecated and will be removed in the next major release. Please use "').concat(e, '" instead.')) },
                        u = t => "function" == typeof t ? t() : t,
                        d = t => t && "function" == typeof t.toPromise,
                        p = t => d(t) ? t.toPromise() : Promise.resolve(t),
                        h = t => t && Promise.resolve(t) === t,
                        m = t => "object" == typeof t && t.jquery,
                        f = t => t instanceof Element || m(t),
                        g = t => { const e = {}; return "object" != typeof t[0] || f(t[0]) ? ["title", "html", "icon"].forEach(((n, i) => { const o = t[i]; "string" == typeof o || f(o) ? e[n] = o : void 0 !== o && r("Unexpected type of ".concat(n, '! Expected "string" or "Element", got ').concat(typeof o)) })) : Object.assign(e, t[0]), e },
                        y = "swal2-",
                        v = t => { const e = {}; for (const n in t) e[t[n]] = y + t[n]; return e },
                        b = v(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"]),
                        w = v(["success", "warning", "info", "question", "error"]),
                        C = () => document.body.querySelector(".".concat(b.container)),
                        k = t => { const e = C(); return e ? e.querySelector(t) : null },
                        E = t => k(".".concat(t)),
                        A = () => E(b.popup),
                        _ = () => E(b.icon),
                        S = () => E(b.title),
                        T = () => E(b["html-container"]),
                        x = () => E(b.image),
                        P = () => E(b["progress-steps"]),
                        I = () => E(b["validation-message"]),
                        O = () => k(".".concat(b.actions, " .").concat(b.confirm)),
                        L = () => k(".".concat(b.actions, " .").concat(b.deny)),
                        B = () => E(b["input-label"]),
                        D = () => k(".".concat(b.loader)),
                        j = () => k(".".concat(b.actions, " .").concat(b.cancel)),
                        M = () => E(b.actions),
                        H = () => E(b.footer),
                        z = () => E(b["timer-progress-bar"]),
                        F = () => E(b.close),
                        N = '\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n',
                        q = () => {
                            const t = o(A().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(((t, e) => (t = parseInt(t.getAttribute("tabindex"))) > (e = parseInt(e.getAttribute("tabindex"))) ? 1 : t < e ? -1 : 0)),
                                e = o(A().querySelectorAll(N)).filter((t => "-1" !== t.getAttribute("tabindex")));
                            return n(t.concat(e)).filter((t => at(t)))
                        },
                        V = () => !K(document.body, b["toast-shown"]) && !K(document.body, b["no-backdrop"]),
                        R = () => A() && K(A(), b.toast),
                        W = () => A().hasAttribute("data-loading"),
                        U = { previousBodyPadding: null },
                        Y = (t, e) => {
                            if (t.textContent = "", e) {
                                const n = (new DOMParser).parseFromString(e, "text/html");
                                o(n.querySelector("head").childNodes).forEach((e => { t.appendChild(e) })), o(n.querySelector("body").childNodes).forEach((e => { t.appendChild(e) }))
                            }
                        },
                        K = (t, e) => {
                            if (!e) return !1;
                            const n = e.split(/\s+/);
                            for (let e = 0; e < n.length; e++)
                                if (!t.classList.contains(n[e])) return !1;
                            return !0
                        },
                        Z = (t, e) => { o(t.classList).forEach((n => { Object.values(b).includes(n) || Object.values(w).includes(n) || Object.values(e.showClass).includes(n) || t.classList.remove(n) })) },
                        J = (t, e, n) => {
                            if (Z(t, e), e.customClass && e.customClass[n]) {
                                if ("string" != typeof e.customClass[n] && !e.customClass[n].forEach) return s("Invalid type of customClass.".concat(n, '! Expected string or iterable object, got "').concat(typeof e.customClass[n], '"'));
                                $(t, e.customClass[n])
                            }
                        },
                        Q = (t, e) => {
                            if (!e) return null;
                            switch (e) {
                                case "select":
                                case "textarea":
                                case "file":
                                    return et(t, b[e]);
                                case "checkbox":
                                    return t.querySelector(".".concat(b.checkbox, " input"));
                                case "radio":
                                    return t.querySelector(".".concat(b.radio, " input:checked")) || t.querySelector(".".concat(b.radio, " input:first-child"));
                                case "range":
                                    return t.querySelector(".".concat(b.range, " input"));
                                default:
                                    return et(t, b.input)
                            }
                        },
                        G = t => {
                            if (t.focus(), "file" !== t.type) {
                                const e = t.value;
                                t.value = "", t.value = e
                            }
                        },
                        X = (t, e, n) => { t && e && ("string" == typeof e && (e = e.split(/\s+/).filter(Boolean)), e.forEach((e => { t.forEach ? t.forEach((t => { n ? t.classList.add(e) : t.classList.remove(e) })) : n ? t.classList.add(e) : t.classList.remove(e) }))) },
                        $ = (t, e) => { X(t, e, !0) },
                        tt = (t, e) => { X(t, e, !1) },
                        et = (t, e) => {
                            for (let n = 0; n < t.childNodes.length; n++)
                                if (K(t.childNodes[n], e)) return t.childNodes[n]
                        },
                        nt = (t, e, n) => { n === "".concat(parseInt(n)) && (n = parseInt(n)), n || 0 === parseInt(n) ? t.style[e] = "number" == typeof n ? "".concat(n, "px") : n : t.style.removeProperty(e) },
                        it = function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex";
                            t.style.display = e
                        },
                        ot = t => { t.style.display = "none" },
                        st = (t, e, n, i) => {
                            const o = t.querySelector(e);
                            o && (o.style[n] = i)
                        },
                        rt = (t, e, n) => { e ? it(t, n) : ot(t) },
                        at = t => !(!t || !(t.offsetWidth || t.offsetHeight || t.getClientRects().length)),
                        lt = () => !at(O()) && !at(L()) && !at(j()),
                        ct = t => !!(t.scrollHeight > t.clientHeight),
                        ut = t => {
                            const e = window.getComputedStyle(t),
                                n = parseFloat(e.getPropertyValue("animation-duration") || "0"),
                                i = parseFloat(e.getPropertyValue("transition-duration") || "0");
                            return n > 0 || i > 0
                        },
                        dt = function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                            const n = z();
                            at(n) && (e && (n.style.transition = "none", n.style.width = "100%"), setTimeout((() => { n.style.transition = "width ".concat(t / 1e3, "s linear"), n.style.width = "0%" }), 10))
                        },
                        pt = () => {
                            const t = z(),
                                e = parseInt(window.getComputedStyle(t).width);
                            t.style.removeProperty("transition"), t.style.width = "100%";
                            const n = parseInt(window.getComputedStyle(t).width),
                                i = parseInt(e / n * 100);
                            t.style.removeProperty("transition"), t.style.width = "".concat(i, "%")
                        },
                        ht = () => "undefined" == typeof window || "undefined" == typeof document,
                        mt = '\n <div aria-labelledby="'.concat(b.title, '" aria-describedby="').concat(b["html-container"], '" class="').concat(b.popup, '" tabindex="-1">\n   <button type="button" class="').concat(b.close, '"></button>\n   <ul class="').concat(b["progress-steps"], '"></ul>\n   <div class="').concat(b.icon, '"></div>\n   <img class="').concat(b.image, '" />\n   <h2 class="').concat(b.title, '" id="').concat(b.title, '"></h2>\n   <div class="').concat(b["html-container"], '" id="').concat(b["html-container"], '"></div>\n   <input class="').concat(b.input, '" />\n   <input type="file" class="').concat(b.file, '" />\n   <div class="').concat(b.range, '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(b.select, '"></select>\n   <div class="').concat(b.radio, '"></div>\n   <label for="').concat(b.checkbox, '" class="').concat(b.checkbox, '">\n     <input type="checkbox" />\n     <span class="').concat(b.label, '"></span>\n   </label>\n   <textarea class="').concat(b.textarea, '"></textarea>\n   <div class="').concat(b["validation-message"], '" id="').concat(b["validation-message"], '"></div>\n   <div class="').concat(b.actions, '">\n     <div class="').concat(b.loader, '"></div>\n     <button type="button" class="').concat(b.confirm, '"></button>\n     <button type="button" class="').concat(b.deny, '"></button>\n     <button type="button" class="').concat(b.cancel, '"></button>\n   </div>\n   <div class="').concat(b.footer, '"></div>\n   <div class="').concat(b["timer-progress-bar-container"], '">\n     <div class="').concat(b["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""),
                        ft = () => { const t = C(); return !!t && (t.remove(), tt([document.documentElement, document.body], [b["no-backdrop"], b["toast-shown"], b["has-column"]]), !0) },
                        gt = () => { Vi.isVisible() && Vi.resetValidationMessage() },
                        yt = () => {
                            const t = A(),
                                e = et(t, b.input),
                                n = et(t, b.file),
                                i = t.querySelector(".".concat(b.range, " input")),
                                o = t.querySelector(".".concat(b.range, " output")),
                                s = et(t, b.select),
                                r = t.querySelector(".".concat(b.checkbox, " input")),
                                a = et(t, b.textarea);
                            e.oninput = gt, n.onchange = gt, s.onchange = gt, r.onchange = gt, a.oninput = gt, i.oninput = () => { gt(), o.value = i.value }, i.onchange = () => { gt(), i.nextSibling.value = i.value }
                        },
                        vt = t => "string" == typeof t ? document.querySelector(t) : t,
                        bt = t => {
                            const e = A();
                            e.setAttribute("role", t.toast ? "alert" : "dialog"), e.setAttribute("aria-live", t.toast ? "polite" : "assertive"), t.toast || e.setAttribute("aria-modal", "true")
                        },
                        wt = t => { "rtl" === window.getComputedStyle(t).direction && $(C(), b.rtl) },
                        Ct = t => {
                            const e = ft();
                            if (ht()) return void r("SweetAlert2 requires document to initialize");
                            const n = document.createElement("div");
                            n.className = b.container, e && $(n, b["no-transition"]), Y(n, mt);
                            const i = vt(t.target);
                            i.appendChild(n), bt(t), wt(i), yt()
                        },
                        kt = (t, e) => { t instanceof HTMLElement ? e.appendChild(t) : "object" == typeof t ? Et(t, e) : t && Y(e, t) },
                        Et = (t, e) => { t.jquery ? At(e, t) : Y(e, t.toString()) },
                        At = (t, e) => {
                            if (t.textContent = "", 0 in e)
                                for (let n = 0; n in e; n++) t.appendChild(e[n].cloneNode(!0));
                            else t.appendChild(e.cloneNode(!0))
                        },
                        _t = (() => {
                            if (ht()) return !1;
                            const t = document.createElement("div"),
                                e = { WebkitAnimation: "webkitAnimationEnd", OAnimation: "oAnimationEnd oanimationend", animation: "animationend" };
                            for (const n in e)
                                if (Object.prototype.hasOwnProperty.call(e, n) && void 0 !== t.style[n]) return e[n];
                            return !1
                        })(),
                        St = () => {
                            const t = document.createElement("div");
                            t.className = b["scrollbar-measure"], document.body.appendChild(t);
                            const e = t.getBoundingClientRect().width - t.clientWidth;
                            return document.body.removeChild(t), e
                        },
                        Tt = (t, e) => {
                            const n = M(),
                                i = D();
                            e.showConfirmButton || e.showDenyButton || e.showCancelButton ? it(n) : ot(n), J(n, e, "actions"), xt(n, i, e), Y(i, e.loaderHtml), J(i, e, "loader")
                        };

                    function xt(t, e, n) {
                        const i = O(),
                            o = L(),
                            s = j();
                        It(i, "confirm", n), It(o, "deny", n), It(s, "cancel", n), Pt(i, o, s, n), n.reverseButtons && (n.toast ? (t.insertBefore(s, i), t.insertBefore(o, i)) : (t.insertBefore(s, e), t.insertBefore(o, e), t.insertBefore(i, e)))
                    }

                    function Pt(t, e, n, i) {
                        if (!i.buttonsStyling) return tt([t, e, n], b.styled);
                        $([t, e, n], b.styled), i.confirmButtonColor && (t.style.backgroundColor = i.confirmButtonColor, $(t, b["default-outline"])), i.denyButtonColor && (e.style.backgroundColor = i.denyButtonColor, $(e, b["default-outline"])), i.cancelButtonColor && (n.style.backgroundColor = i.cancelButtonColor, $(n, b["default-outline"]))
                    }

                    function It(t, e, n) { rt(t, n["show".concat(i(e), "Button")], "inline-block"), Y(t, n["".concat(e, "ButtonText")]), t.setAttribute("aria-label", n["".concat(e, "ButtonAriaLabel")]), t.className = b[e], J(t, n, "".concat(e, "Button")), $(t, n["".concat(e, "ButtonClass")]) }

                    function Ot(t, e) { "string" == typeof e ? t.style.background = e : e || $([document.documentElement, document.body], b["no-backdrop"]) }

                    function Lt(t, e) { e in b ? $(t, b[e]) : (s('The "position" parameter is not valid, defaulting to "center"'), $(t, b.center)) }

                    function Bt(t, e) {
                        if (e && "string" == typeof e) {
                            const n = "grow-".concat(e);
                            n in b && $(t, b[n])
                        }
                    }
                    const Dt = (t, e) => {
                        const n = C();
                        n && (Ot(n, e.backdrop), Lt(n, e.position), Bt(n, e.grow), J(n, e, "container"))
                    };
                    var jt = { awaitingPromise: new WeakMap, promise: new WeakMap, innerParams: new WeakMap, domCache: new WeakMap };
                    const Mt = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
                        Ht = (t, e) => {
                            const n = A(),
                                i = jt.innerParams.get(t),
                                o = !i || e.input !== i.input;
                            Mt.forEach((t => {
                                const i = b[t],
                                    s = et(n, i);
                                Nt(t, e.inputAttributes), s.className = i, o && ot(s)
                            })), e.input && (o && zt(e), qt(e))
                        },
                        zt = t => {
                            if (!Ut[t.input]) return r('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(t.input, '"'));
                            const e = Wt(t.input),
                                n = Ut[t.input](e, t);
                            it(n), setTimeout((() => { G(n) }))
                        },
                        Ft = t => {
                            for (let e = 0; e < t.attributes.length; e++) {
                                const n = t.attributes[e].name;
                                ["type", "value", "style"].includes(n) || t.removeAttribute(n)
                            }
                        },
                        Nt = (t, e) => { const n = Q(A(), t); if (n) { Ft(n); for (const t in e) n.setAttribute(t, e[t]) } },
                        qt = t => {
                            const e = Wt(t.input);
                            t.customClass && $(e, t.customClass.input)
                        },
                        Vt = (t, e) => { t.placeholder && !e.inputPlaceholder || (t.placeholder = e.inputPlaceholder) },
                        Rt = (t, e, n) => {
                            if (n.inputLabel) {
                                t.id = b.input;
                                const i = document.createElement("label"),
                                    o = b["input-label"];
                                i.setAttribute("for", t.id), i.className = o, $(i, n.customClass.inputLabel), i.innerText = n.inputLabel, e.insertAdjacentElement("beforebegin", i)
                            }
                        },
                        Wt = t => { const e = b[t] ? b[t] : b.input; return et(A(), e) },
                        Ut = {};
                    Ut.text = Ut.email = Ut.password = Ut.number = Ut.tel = Ut.url = (t, e) => ("string" == typeof e.inputValue || "number" == typeof e.inputValue ? t.value = e.inputValue : h(e.inputValue) || s('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof e.inputValue, '"')), Rt(t, t, e), Vt(t, e), t.type = e.input, t), Ut.file = (t, e) => (Rt(t, t, e), Vt(t, e), t), Ut.range = (t, e) => {
                        const n = t.querySelector("input"),
                            i = t.querySelector("output");
                        return n.value = e.inputValue, n.type = e.input, i.value = e.inputValue, Rt(n, t, e), t
                    }, Ut.select = (t, e) => {
                        if (t.textContent = "", e.inputPlaceholder) {
                            const n = document.createElement("option");
                            Y(n, e.inputPlaceholder), n.value = "", n.disabled = !0, n.selected = !0, t.appendChild(n)
                        }
                        return Rt(t, t, e), t
                    }, Ut.radio = t => (t.textContent = "", t), Ut.checkbox = (t, e) => {
                        const n = Q(A(), "checkbox");
                        n.value = 1, n.id = b.checkbox, n.checked = Boolean(e.inputValue);
                        const i = t.querySelector("span");
                        return Y(i, e.inputPlaceholder), t
                    }, Ut.textarea = (t, e) => {
                        t.value = e.inputValue, Vt(t, e), Rt(t, t, e);
                        const n = t => parseInt(window.getComputedStyle(t).marginLeft) + parseInt(window.getComputedStyle(t).marginRight);
                        return setTimeout((() => {
                            if ("MutationObserver" in window) {
                                const e = parseInt(window.getComputedStyle(A()).width);
                                new MutationObserver((() => {
                                    const i = t.offsetWidth + n(t);
                                    A().style.width = i > e ? "".concat(i, "px") : null
                                })).observe(t, { attributes: !0, attributeFilter: ["style"] })
                            }
                        })), t
                    };
                    const Yt = (t, e) => {
                            const n = T();
                            J(n, e, "htmlContainer"), e.html ? (kt(e.html, n), it(n, "block")) : e.text ? (n.textContent = e.text, it(n, "block")) : ot(n), Ht(t, e)
                        },
                        Kt = (t, e) => {
                            const n = H();
                            rt(n, e.footer), e.footer && kt(e.footer, n), J(n, e, "footer")
                        },
                        Zt = (t, e) => {
                            const n = F();
                            Y(n, e.closeButtonHtml), J(n, e, "closeButton"), rt(n, e.showCloseButton), n.setAttribute("aria-label", e.closeButtonAriaLabel)
                        },
                        Jt = (t, e) => {
                            const n = jt.innerParams.get(t),
                                i = _();
                            return n && e.icon === n.icon ? (Xt(i, e), void Qt(i, e)) : e.icon || e.iconHtml ? e.icon && -1 === Object.keys(w).indexOf(e.icon) ? (r('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(e.icon, '"')), ot(i)) : (it(i), Xt(i, e), Qt(i, e), void $(i, e.showClass.icon)) : ot(i)
                        },
                        Qt = (t, e) => {
                            for (const n in w) e.icon !== n && tt(t, w[n]);
                            $(t, w[e.icon]), $t(t, e), Gt(), J(t, e, "icon")
                        },
                        Gt = () => {
                            const t = A(),
                                e = window.getComputedStyle(t).getPropertyValue("background-color"),
                                n = t.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
                            for (let t = 0; t < n.length; t++) n[t].style.backgroundColor = e
                        },
                        Xt = (t, e) => { t.textContent = "", e.iconHtml ? Y(t, te(e.iconHtml)) : "success" === e.icon ? Y(t, '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    ') : "error" === e.icon ? Y(t, '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    ') : Y(t, te({ question: "?", warning: "!", info: "i" }[e.icon])) },
                        $t = (t, e) => {
                            if (e.iconColor) {
                                t.style.color = e.iconColor, t.style.borderColor = e.iconColor;
                                for (const n of[".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) st(t, n, "backgroundColor", e.iconColor);
                                st(t, ".swal2-success-ring", "borderColor", e.iconColor)
                            }
                        },
                        te = t => '<div class="'.concat(b["icon-content"], '">').concat(t, "</div>"),
                        ee = (t, e) => {
                            const n = x();
                            if (!e.imageUrl) return ot(n);
                            it(n, ""), n.setAttribute("src", e.imageUrl), n.setAttribute("alt", e.imageAlt), nt(n, "width", e.imageWidth), nt(n, "height", e.imageHeight), n.className = b.image, J(n, e, "image")
                        },
                        ne = t => { const e = document.createElement("li"); return $(e, b["progress-step"]), Y(e, t), e },
                        ie = t => { const e = document.createElement("li"); return $(e, b["progress-step-line"]), t.progressStepsDistance && (e.style.width = t.progressStepsDistance), e },
                        oe = (t, e) => {
                            const n = P();
                            if (!e.progressSteps || 0 === e.progressSteps.length) return ot(n);
                            it(n), n.textContent = "", e.currentProgressStep >= e.progressSteps.length && s("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), e.progressSteps.forEach(((t, i) => {
                                const o = ne(t);
                                if (n.appendChild(o), i === e.currentProgressStep && $(o, b["active-progress-step"]), i !== e.progressSteps.length - 1) {
                                    const t = ie(e);
                                    n.appendChild(t)
                                }
                            }))
                        },
                        se = (t, e) => {
                            const n = S();
                            rt(n, e.title || e.titleText, "block"), e.title && kt(e.title, n), e.titleText && (n.innerText = e.titleText), J(n, e, "title")
                        },
                        re = (t, e) => {
                            const n = C(),
                                i = A();
                            e.toast ? (nt(n, "width", e.width), i.style.width = "100%", i.insertBefore(D(), _())) : nt(i, "width", e.width), nt(i, "padding", e.padding), e.color && (i.style.color = e.color), e.background && (i.style.background = e.background), ot(I()), ae(i, e)
                        },
                        ae = (t, e) => { t.className = "".concat(b.popup, " ").concat(at(t) ? e.showClass.popup : ""), e.toast ? ($([document.documentElement, document.body], b["toast-shown"]), $(t, b.toast)) : $(t, b.modal), J(t, e, "popup"), "string" == typeof e.customClass && $(t, e.customClass), e.icon && $(t, b["icon-".concat(e.icon)]) },
                        le = (t, e) => { re(t, e), Dt(t, e), oe(t, e), Jt(t, e), ee(t, e), se(t, e), Zt(t, e), Yt(t, e), Tt(t, e), Kt(t, e), "function" == typeof e.didRender && e.didRender(A()) },
                        ce = () => at(A()),
                        ue = () => O() && O().click(),
                        de = () => L() && L().click(),
                        pe = () => j() && j().click();

                    function he() { const t = this; for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i]; return new t(...n) }

                    function me(t) {
                        class e extends(this) { _main(e, n) { return super._main(e, Object.assign({}, t, n)) } }
                        return e
                    }
                    const fe = t => {
                            let e = A();
                            e || Vi.fire(), e = A();
                            const n = D();
                            R() ? ot(_()) : ge(e, t), it(n), e.setAttribute("data-loading", !0), e.setAttribute("aria-busy", !0), e.focus()
                        },
                        ge = (t, e) => {
                            const n = M(),
                                i = D();
                            !e && at(O()) && (e = O()), it(n), e && (ot(e), i.setAttribute("data-button-to-replace", e.className)), i.parentNode.insertBefore(i, e), $([t, n], b.loading)
                        },
                        ye = 100,
                        ve = {},
                        be = () => { ve.previousActiveElement && ve.previousActiveElement.focus ? (ve.previousActiveElement.focus(), ve.previousActiveElement = null) : document.body && document.body.focus() },
                        we = t => new Promise((e => {
                            if (!t) return e();
                            const n = window.scrollX,
                                i = window.scrollY;
                            ve.restoreFocusTimeout = setTimeout((() => { be(), e() }), ye), window.scrollTo(n, i)
                        })),
                        Ce = () => ve.timeout && ve.timeout.getTimerLeft(),
                        ke = () => { if (ve.timeout) return pt(), ve.timeout.stop() },
                        Ee = () => { if (ve.timeout) { const t = ve.timeout.start(); return dt(t), t } },
                        Ae = () => { const t = ve.timeout; return t && (t.running ? ke() : Ee()) },
                        _e = t => { if (ve.timeout) { const e = ve.timeout.increase(t); return dt(e, !0), e } },
                        Se = () => ve.timeout && ve.timeout.isRunning();
                    let Te = !1;
                    const xe = {};

                    function Pe() { xe[arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, Te || (document.body.addEventListener("click", Ie), Te = !0) }
                    const Ie = t => {
                            for (let e = t.target; e && e !== document; e = e.parentNode)
                                for (const t in xe) { const n = e.getAttribute(t); if (n) return void xe[t].fire({ template: n }) }
                        },
                        Oe = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: !1, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: !0, heightAuto: !0, allowOutsideClick: !0, allowEscapeKey: !0, allowEnterKey: !0, stopKeydownPropagation: !0, keydownListenerCapture: !1, showConfirmButton: !0, showDenyButton: !1, showCancelButton: !1, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: !0, reverseButtons: !1, focusConfirm: !0, focusDeny: !1, focusCancel: !1, returnFocus: !0, showCloseButton: !1, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: !1, showLoaderOnDeny: !1, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: !1, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: !0, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: !1, validationMessage: void 0, grow: !1, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: !0 },
                        Le = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
                        Be = {},
                        De = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
                        je = t => Object.prototype.hasOwnProperty.call(Oe, t),
                        Me = t => -1 !== Le.indexOf(t),
                        He = t => Be[t],
                        ze = t => { je(t) || s('Unknown parameter "'.concat(t, '"')) },
                        Fe = t => { De.includes(t) && s('The parameter "'.concat(t, '" is incompatible with toasts')) },
                        Ne = t => { He(t) && c(t, He(t)) },
                        qe = t => {!t.backdrop && t.allowOutsideClick && s('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'); for (const e in t) ze(e), t.toast && Fe(e), Ne(e) };
                    var Ve = Object.freeze({ isValidParameter: je, isUpdatableParameter: Me, isDeprecatedParameter: He, argsToParams: g, isVisible: ce, clickConfirm: ue, clickDeny: de, clickCancel: pe, getContainer: C, getPopup: A, getTitle: S, getHtmlContainer: T, getImage: x, getIcon: _, getInputLabel: B, getCloseButton: F, getActions: M, getConfirmButton: O, getDenyButton: L, getCancelButton: j, getLoader: D, getFooter: H, getTimerProgressBar: z, getFocusableElements: q, getValidationMessage: I, isLoading: W, fire: he, mixin: me, showLoading: fe, enableLoading: fe, getTimerLeft: Ce, stopTimer: ke, resumeTimer: Ee, toggleTimer: Ae, increaseTimer: _e, isTimerRunning: Se, bindClickHandler: Pe });

                    function Re() {
                        const t = jt.innerParams.get(this);
                        if (!t) return;
                        const e = jt.domCache.get(this);
                        ot(e.loader), R() ? t.icon && it(_()) : We(e), tt([e.popup, e.actions], b.loading), e.popup.removeAttribute("aria-busy"), e.popup.removeAttribute("data-loading"), e.confirmButton.disabled = !1, e.denyButton.disabled = !1, e.cancelButton.disabled = !1
                    }
                    const We = t => {
                        const e = t.popup.getElementsByClassName(t.loader.getAttribute("data-button-to-replace"));
                        e.length ? it(e[0], "inline-block") : lt() && ot(t.actions)
                    };

                    function Ue(t) {
                        const e = jt.innerParams.get(t || this),
                            n = jt.domCache.get(t || this);
                        return n ? Q(n.popup, e.input) : null
                    }
                    const Ye = () => { null === U.previousBodyPadding && document.body.scrollHeight > window.innerHeight && (U.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(U.previousBodyPadding + St(), "px")) },
                        Ke = () => { null !== U.previousBodyPadding && (document.body.style.paddingRight = "".concat(U.previousBodyPadding, "px"), U.previousBodyPadding = null) },
                        Ze = () => {
                            if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1) && !K(document.body, b.iosfix)) {
                                const t = document.body.scrollTop;
                                document.body.style.top = "".concat(-1 * t, "px"), $(document.body, b.iosfix), Qe(), Je()
                            }
                        },
                        Je = () => {
                            if (!navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i)) {
                                const t = 44;
                                A().scrollHeight > window.innerHeight - t && (C().style.paddingBottom = "".concat(t, "px"))
                            }
                        },
                        Qe = () => {
                            const t = C();
                            let e;
                            t.ontouchstart = t => { e = Ge(t) }, t.ontouchmove = t => { e && (t.preventDefault(), t.stopPropagation()) }
                        },
                        Ge = t => {
                            const e = t.target,
                                n = C();
                            return !(Xe(t) || $e(t) || e !== n && (ct(n) || "INPUT" === e.tagName || "TEXTAREA" === e.tagName || ct(T()) && T().contains(e)))
                        },
                        Xe = t => t.touches && t.touches.length && "stylus" === t.touches[0].touchType,
                        $e = t => t.touches && t.touches.length > 1,
                        tn = () => {
                            if (K(document.body, b.iosfix)) {
                                const t = parseInt(document.body.style.top, 10);
                                tt(document.body, b.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * t
                            }
                        },
                        en = () => { o(document.body.children).forEach((t => { t === C() || t.contains(C()) || (t.hasAttribute("aria-hidden") && t.setAttribute("data-previous-aria-hidden", t.getAttribute("aria-hidden")), t.setAttribute("aria-hidden", "true")) })) },
                        nn = () => { o(document.body.children).forEach((t => { t.hasAttribute("data-previous-aria-hidden") ? (t.setAttribute("aria-hidden", t.getAttribute("data-previous-aria-hidden")), t.removeAttribute("data-previous-aria-hidden")) : t.removeAttribute("aria-hidden") })) };
                    var on = { swalPromiseResolve: new WeakMap, swalPromiseReject: new WeakMap };

                    function sn(t, e, n, i) { R() ? fn(t, i) : (we(n).then((() => fn(t, i))), ve.keydownTarget.removeEventListener("keydown", ve.keydownHandler, { capture: ve.keydownListenerCapture }), ve.keydownHandlerAdded = !1), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (e.setAttribute("style", "display:none !important"), e.removeAttribute("class"), e.innerHTML = "") : e.remove(), V() && (Ke(), tn(), nn()), rn() }

                    function rn() { tt([document.documentElement, document.body], [b.shown, b["height-auto"], b["no-backdrop"], b["toast-shown"]]) }

                    function an(t) {
                        t = pn(t);
                        const e = on.swalPromiseResolve.get(this),
                            n = cn(this);
                        this.isAwaitingPromise() ? t.isDismissed || (dn(this), e(t)) : n && e(t)
                    }

                    function ln() { return !!jt.awaitingPromise.get(this) }
                    const cn = t => {
                        const e = A();
                        if (!e) return !1;
                        const n = jt.innerParams.get(t);
                        if (!n || K(e, n.hideClass.popup)) return !1;
                        tt(e, n.showClass.popup), $(e, n.hideClass.popup);
                        const i = C();
                        return tt(i, n.showClass.backdrop), $(i, n.hideClass.backdrop), hn(t, e, n), !0
                    };

                    function un(t) {
                        const e = on.swalPromiseReject.get(this);
                        dn(this), e && e(t)
                    }
                    const dn = t => { t.isAwaitingPromise() && (jt.awaitingPromise.delete(t), jt.innerParams.get(t) || t._destroy()) },
                        pn = t => void 0 === t ? { isConfirmed: !1, isDenied: !1, isDismissed: !0 } : Object.assign({ isConfirmed: !1, isDenied: !1, isDismissed: !1 }, t),
                        hn = (t, e, n) => {
                            const i = C(),
                                o = _t && ut(e);
                            "function" == typeof n.willClose && n.willClose(e), o ? mn(t, e, i, n.returnFocus, n.didClose) : sn(t, i, n.returnFocus, n.didClose)
                        },
                        mn = (t, e, n, i, o) => { ve.swalCloseEventFinishedCallback = sn.bind(null, t, n, i, o), e.addEventListener(_t, (function(t) { t.target === e && (ve.swalCloseEventFinishedCallback(), delete ve.swalCloseEventFinishedCallback) })) },
                        fn = (t, e) => { setTimeout((() => { "function" == typeof e && e.bind(t.params)(), t._destroy() })) };

                    function gn(t, e, n) {
                        const i = jt.domCache.get(t);
                        e.forEach((t => { i[t].disabled = n }))
                    }

                    function yn(t, e) { if (!t) return !1; if ("radio" === t.type) { const n = t.parentNode.parentNode.querySelectorAll("input"); for (let t = 0; t < n.length; t++) n[t].disabled = e } else t.disabled = e }

                    function vn() { gn(this, ["confirmButton", "denyButton", "cancelButton"], !1) }

                    function bn() { gn(this, ["confirmButton", "denyButton", "cancelButton"], !0) }

                    function wn() { return yn(this.getInput(), !1) }

                    function Cn() { return yn(this.getInput(), !0) }

                    function kn(t) {
                        const e = jt.domCache.get(this),
                            n = jt.innerParams.get(this);
                        Y(e.validationMessage, t), e.validationMessage.className = b["validation-message"], n.customClass && n.customClass.validationMessage && $(e.validationMessage, n.customClass.validationMessage), it(e.validationMessage);
                        const i = this.getInput();
                        i && (i.setAttribute("aria-invalid", !0), i.setAttribute("aria-describedby", b["validation-message"]), G(i), $(i, b.inputerror))
                    }

                    function En() {
                        const t = jt.domCache.get(this);
                        t.validationMessage && ot(t.validationMessage);
                        const e = this.getInput();
                        e && (e.removeAttribute("aria-invalid"), e.removeAttribute("aria-describedby"), tt(e, b.inputerror))
                    }

                    function An() { return jt.domCache.get(this).progressSteps }
                    class _n {
                        constructor(t, e) { this.callback = t, this.remaining = e, this.running = !1, this.start() }
                        start() { return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining }
                        stop() { return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date - this.started), this.remaining }
                        increase(t) { const e = this.running; return e && this.stop(), this.remaining += t, e && this.start(), this.remaining }
                        getTimerLeft() { return this.running && (this.stop(), this.start()), this.remaining }
                        isRunning() { return this.running }
                    }
                    var Sn = { email: (t, e) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid email address"), url: (t, e) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid URL") };

                    function Tn(t) { t.inputValidator || Object.keys(Sn).forEach((e => { t.input === e && (t.inputValidator = Sn[e]) })) }

                    function xn(t) {
                        (!t.target || "string" == typeof t.target && !document.querySelector(t.target) || "string" != typeof t.target && !t.target.appendChild) && (s('Target parameter is not valid, defaulting to "body"'), t.target = "body")
                    }

                    function Pn(t) { Tn(t), t.showLoaderOnConfirm && !t.preConfirm && s("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), xn(t), "string" == typeof t.title && (t.title = t.title.split("\n").join("<br />")), Ct(t) }
                    const In = ["swal-title", "swal-html", "swal-footer"],
                        On = t => { const e = "string" == typeof t.template ? document.querySelector(t.template) : t.template; if (!e) return {}; const n = e.content; return zn(n), Object.assign(Ln(n), Bn(n), Dn(n), jn(n), Mn(n), Hn(n, In)) },
                        Ln = t => { const e = {}; return o(t.querySelectorAll("swal-param")).forEach((t => { Fn(t, ["name", "value"]); const n = t.getAttribute("name"); let i = t.getAttribute("value"); "boolean" == typeof Oe[n] && "false" === i && (i = !1), "object" == typeof Oe[n] && (i = JSON.parse(i)), e[n] = i })), e },
                        Bn = t => {
                            const e = {};
                            return o(t.querySelectorAll("swal-button")).forEach((t => {
                                Fn(t, ["type", "color", "aria-label"]);
                                const n = t.getAttribute("type");
                                e["".concat(n, "ButtonText")] = t.innerHTML, e["show".concat(i(n), "Button")] = !0, t.hasAttribute("color") && (e["".concat(n, "ButtonColor")] = t.getAttribute("color")), t.hasAttribute("aria-label") && (e["".concat(n, "ButtonAriaLabel")] = t.getAttribute("aria-label"))
                            })), e
                        },
                        Dn = t => {
                            const e = {},
                                n = t.querySelector("swal-image");
                            return n && (Fn(n, ["src", "width", "height", "alt"]), n.hasAttribute("src") && (e.imageUrl = n.getAttribute("src")), n.hasAttribute("width") && (e.imageWidth = n.getAttribute("width")), n.hasAttribute("height") && (e.imageHeight = n.getAttribute("height")), n.hasAttribute("alt") && (e.imageAlt = n.getAttribute("alt"))), e
                        },
                        jn = t => {
                            const e = {},
                                n = t.querySelector("swal-icon");
                            return n && (Fn(n, ["type", "color"]), n.hasAttribute("type") && (e.icon = n.getAttribute("type")), n.hasAttribute("color") && (e.iconColor = n.getAttribute("color")), e.iconHtml = n.innerHTML), e
                        },
                        Mn = t => {
                            const e = {},
                                n = t.querySelector("swal-input");
                            n && (Fn(n, ["type", "label", "placeholder", "value"]), e.input = n.getAttribute("type") || "text", n.hasAttribute("label") && (e.inputLabel = n.getAttribute("label")), n.hasAttribute("placeholder") && (e.inputPlaceholder = n.getAttribute("placeholder")), n.hasAttribute("value") && (e.inputValue = n.getAttribute("value")));
                            const i = t.querySelectorAll("swal-input-option");
                            return i.length && (e.inputOptions = {}, o(i).forEach((t => {
                                Fn(t, ["value"]);
                                const n = t.getAttribute("value"),
                                    i = t.innerHTML;
                                e.inputOptions[n] = i
                            }))), e
                        },
                        Hn = (t, e) => {
                            const n = {};
                            for (const i in e) {
                                const o = e[i],
                                    s = t.querySelector(o);
                                s && (Fn(s, []), n[o.replace(/^swal-/, "")] = s.innerHTML.trim())
                            }
                            return n
                        },
                        zn = t => {
                            const e = In.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                            o(t.children).forEach((t => { const n = t.tagName.toLowerCase(); - 1 === e.indexOf(n) && s("Unrecognized element <".concat(n, ">")) }))
                        },
                        Fn = (t, e) => { o(t.attributes).forEach((n => {-1 === e.indexOf(n.name) && s(['Unrecognized attribute "'.concat(n.name, '" on <').concat(t.tagName.toLowerCase(), ">."), "".concat(e.length ? "Allowed attributes are: ".concat(e.join(", ")) : "To set the value, use HTML within the element.")]) })) },
                        Nn = 10,
                        qn = t => {
                            const e = C(),
                                n = A();
                            "function" == typeof t.willOpen && t.willOpen(n);
                            const i = window.getComputedStyle(document.body).overflowY;
                            Un(e, n, t), setTimeout((() => { Rn(e, n) }), Nn), V() && (Wn(e, t.scrollbarPadding, i), en()), R() || ve.previousActiveElement || (ve.previousActiveElement = document.activeElement), "function" == typeof t.didOpen && setTimeout((() => t.didOpen(n))), tt(e, b["no-transition"])
                        },
                        Vn = t => {
                            const e = A();
                            if (t.target !== e) return;
                            const n = C();
                            e.removeEventListener(_t, Vn), n.style.overflowY = "auto"
                        },
                        Rn = (t, e) => { _t && ut(e) ? (t.style.overflowY = "hidden", e.addEventListener(_t, Vn)) : t.style.overflowY = "auto" },
                        Wn = (t, e, n) => { Ze(), e && "hidden" !== n && Ye(), setTimeout((() => { t.scrollTop = 0 })) },
                        Un = (t, e, n) => { $(t, n.showClass.backdrop), e.style.setProperty("opacity", "0", "important"), it(e, "grid"), setTimeout((() => { $(e, n.showClass.popup), e.style.removeProperty("opacity") }), Nn), $([document.documentElement, document.body], b.shown), n.heightAuto && n.backdrop && !n.toast && $([document.documentElement, document.body], b["height-auto"]) },
                        Yn = (t, e) => { "select" === e.input || "radio" === e.input ? Gn(t, e) : ["text", "email", "number", "tel", "textarea"].includes(e.input) && (d(e.inputValue) || h(e.inputValue)) && (fe(O()), Xn(t, e)) },
                        Kn = (t, e) => {
                            const n = t.getInput();
                            if (!n) return null;
                            switch (e.input) {
                                case "checkbox":
                                    return Zn(n);
                                case "radio":
                                    return Jn(n);
                                case "file":
                                    return Qn(n);
                                default:
                                    return e.inputAutoTrim ? n.value.trim() : n.value
                            }
                        },
                        Zn = t => t.checked ? 1 : 0,
                        Jn = t => t.checked ? t.value : null,
                        Qn = t => t.files.length ? null !== t.getAttribute("multiple") ? t.files : t.files[0] : null,
                        Gn = (t, e) => {
                            const n = A(),
                                i = t => $n[e.input](n, ti(t), e);
                            d(e.inputOptions) || h(e.inputOptions) ? (fe(O()), p(e.inputOptions).then((e => { t.hideLoading(), i(e) }))) : "object" == typeof e.inputOptions ? i(e.inputOptions) : r("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof e.inputOptions))
                        },
                        Xn = (t, e) => {
                            const n = t.getInput();
                            ot(n), p(e.inputValue).then((i => { n.value = "number" === e.input ? parseFloat(i) || 0 : "".concat(i), it(n), n.focus(), t.hideLoading() })).catch((e => { r("Error in inputValue promise: ".concat(e)), n.value = "", it(n), n.focus(), t.hideLoading() }))
                        },
                        $n = {
                            select: (t, e, n) => {
                                const i = et(t, b.select),
                                    o = (t, e, i) => {
                                        const o = document.createElement("option");
                                        o.value = i, Y(o, e), o.selected = ei(i, n.inputValue), t.appendChild(o)
                                    };
                                e.forEach((t => {
                                    const e = t[0],
                                        n = t[1];
                                    if (Array.isArray(n)) {
                                        const t = document.createElement("optgroup");
                                        t.label = e, t.disabled = !1, i.appendChild(t), n.forEach((e => o(t, e[1], e[0])))
                                    } else o(i, n, e)
                                })), i.focus()
                            },
                            radio: (t, e, n) => {
                                const i = et(t, b.radio);
                                e.forEach((t => {
                                    const e = t[0],
                                        o = t[1],
                                        s = document.createElement("input"),
                                        r = document.createElement("label");
                                    s.type = "radio", s.name = b.radio, s.value = e, ei(e, n.inputValue) && (s.checked = !0);
                                    const a = document.createElement("span");
                                    Y(a, o), a.className = b.label, r.appendChild(s), r.appendChild(a), i.appendChild(r)
                                }));
                                const o = i.querySelectorAll("input");
                                o.length && o[0].focus()
                            }
                        },
                        ti = t => { const e = []; return "undefined" != typeof Map && t instanceof Map ? t.forEach(((t, n) => { let i = t; "object" == typeof i && (i = ti(i)), e.push([n, i]) })) : Object.keys(t).forEach((n => { let i = t[n]; "object" == typeof i && (i = ti(i)), e.push([n, i]) })), e },
                        ei = (t, e) => e && e.toString() === t.toString(),
                        ni = t => {
                            const e = jt.innerParams.get(t);
                            t.disableButtons(), e.input ? si(t, "confirm") : ui(t, !0)
                        },
                        ii = t => {
                            const e = jt.innerParams.get(t);
                            t.disableButtons(), e.returnInputValueOnDeny ? si(t, "deny") : ai(t, !1)
                        },
                        oi = (e, n) => { e.disableButtons(), n(t.cancel) },
                        si = (t, e) => {
                            const n = jt.innerParams.get(t),
                                i = Kn(t, n);
                            n.inputValidator ? ri(t, i, e) : t.getInput().checkValidity() ? "deny" === e ? ai(t, i) : ui(t, i) : (t.enableButtons(), t.showValidationMessage(n.validationMessage))
                        },
                        ri = (t, e, n) => {
                            const i = jt.innerParams.get(t);
                            t.disableInput(), Promise.resolve().then((() => p(i.inputValidator(e, i.validationMessage)))).then((i => { t.enableButtons(), t.enableInput(), i ? t.showValidationMessage(i) : "deny" === n ? ai(t, e) : ui(t, e) }))
                        },
                        ai = (t, e) => {
                            const n = jt.innerParams.get(t || void 0);
                            n.showLoaderOnDeny && fe(L()), n.preDeny ? (jt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => p(n.preDeny(e, n.validationMessage)))).then((n => {!1 === n ? t.hideLoading() : t.closePopup({ isDenied: !0, value: void 0 === n ? e : n }) })).catch((e => ci(t || void 0, e)))) : t.closePopup({ isDenied: !0, value: e })
                        },
                        li = (t, e) => { t.closePopup({ isConfirmed: !0, value: e }) },
                        ci = (t, e) => { t.rejectPromise(e) },
                        ui = (t, e) => {
                            const n = jt.innerParams.get(t || void 0);
                            n.showLoaderOnConfirm && fe(), n.preConfirm ? (t.resetValidationMessage(), jt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => p(n.preConfirm(e, n.validationMessage)))).then((n => { at(I()) || !1 === n ? t.hideLoading() : li(t, void 0 === n ? e : n) })).catch((e => ci(t || void 0, e)))) : li(t, e)
                        },
                        di = (t, e, n, i) => { e.keydownTarget && e.keydownHandlerAdded && (e.keydownTarget.removeEventListener("keydown", e.keydownHandler, { capture: e.keydownListenerCapture }), e.keydownHandlerAdded = !1), n.toast || (e.keydownHandler = e => fi(t, e, i), e.keydownTarget = n.keydownListenerCapture ? window : A(), e.keydownListenerCapture = n.keydownListenerCapture, e.keydownTarget.addEventListener("keydown", e.keydownHandler, { capture: e.keydownListenerCapture }), e.keydownHandlerAdded = !0) },
                        pi = (t, e, n) => {
                            const i = q();
                            if (i.length) return (e += n) === i.length ? e = 0 : -1 === e && (e = i.length - 1), i[e].focus();
                            A().focus()
                        },
                        hi = ["ArrowRight", "ArrowDown"],
                        mi = ["ArrowLeft", "ArrowUp"],
                        fi = (t, e, n) => {
                            const i = jt.innerParams.get(t);
                            i && (i.stopKeydownPropagation && e.stopPropagation(), "Enter" === e.key ? gi(t, e, i) : "Tab" === e.key ? yi(e, i) : [...hi, ...mi].includes(e.key) ? vi(e.key) : "Escape" === e.key && bi(e, i, n))
                        },
                        gi = (t, e, n) => {
                            if (!e.isComposing && e.target && t.getInput() && e.target.outerHTML === t.getInput().outerHTML) {
                                if (["textarea", "file"].includes(n.input)) return;
                                ue(), e.preventDefault()
                            }
                        },
                        yi = (t, e) => {
                            const n = t.target,
                                i = q();
                            let o = -1;
                            for (let t = 0; t < i.length; t++)
                                if (n === i[t]) { o = t; break }
                            t.shiftKey ? pi(e, o, -1) : pi(e, o, 1), t.stopPropagation(), t.preventDefault()
                        },
                        vi = t => {
                            if (![O(), L(), j()].includes(document.activeElement)) return;
                            const e = hi.includes(t) ? "nextElementSibling" : "previousElementSibling",
                                n = document.activeElement[e];
                            n && n.focus()
                        },
                        bi = (e, n, i) => { u(n.allowEscapeKey) && (e.preventDefault(), i(t.esc)) },
                        wi = (t, e, n) => { jt.innerParams.get(t).toast ? Ci(t, e, n) : (Ei(e), Ai(e), _i(t, e, n)) },
                        Ci = (e, n, i) => {
                            n.popup.onclick = () => {
                                const n = jt.innerParams.get(e);
                                n.showConfirmButton || n.showDenyButton || n.showCancelButton || n.showCloseButton || n.timer || n.input || i(t.close)
                            }
                        };
                    let ki = !1;
                    const Ei = t => { t.popup.onmousedown = () => { t.container.onmouseup = function(e) { t.container.onmouseup = void 0, e.target === t.container && (ki = !0) } } },
                        Ai = t => { t.container.onmousedown = () => { t.popup.onmouseup = function(e) { t.popup.onmouseup = void 0, (e.target === t.popup || t.popup.contains(e.target)) && (ki = !0) } } },
                        _i = (e, n, i) => {
                            n.container.onclick = o => {
                                const s = jt.innerParams.get(e);
                                ki ? ki = !1 : o.target === n.container && u(s.allowOutsideClick) && i(t.backdrop)
                            }
                        };

                    function Si(t) {
                        let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        qe(Object.assign({}, e, t)), ve.currentInstance && (ve.currentInstance._destroy(), V() && nn()), ve.currentInstance = this;
                        const n = Ti(t, e);
                        Pn(n), Object.freeze(n), ve.timeout && (ve.timeout.stop(), delete ve.timeout), clearTimeout(ve.restoreFocusTimeout);
                        const i = Pi(this);
                        return le(this, n), jt.innerParams.set(this, n), xi(this, i, n)
                    }
                    const Ti = (t, e) => {
                            const n = On(t),
                                i = Object.assign({}, Oe, e, n, t);
                            return i.showClass = Object.assign({}, Oe.showClass, i.showClass), i.hideClass = Object.assign({}, Oe.hideClass, i.hideClass), i
                        },
                        xi = (e, n, i) => new Promise(((o, s) => {
                            const r = t => { e.closePopup({ isDismissed: !0, dismiss: t }) };
                            on.swalPromiseResolve.set(e, o), on.swalPromiseReject.set(e, s), n.confirmButton.onclick = () => ni(e), n.denyButton.onclick = () => ii(e), n.cancelButton.onclick = () => oi(e, r), n.closeButton.onclick = () => r(t.close), wi(e, n, r), di(e, ve, i, r), Yn(e, i), qn(i), Ii(ve, i, r), Oi(n, i), setTimeout((() => { n.container.scrollTop = 0 }))
                        })),
                        Pi = t => { const e = { popup: A(), container: C(), actions: M(), confirmButton: O(), denyButton: L(), cancelButton: j(), loader: D(), closeButton: F(), validationMessage: I(), progressSteps: P() }; return jt.domCache.set(t, e), e },
                        Ii = (t, e, n) => {
                            const i = z();
                            ot(i), e.timer && (t.timeout = new _n((() => { n("timer"), delete t.timeout }), e.timer), e.timerProgressBar && (it(i), setTimeout((() => { t.timeout && t.timeout.running && dt(e.timer) }))))
                        },
                        Oi = (t, e) => { if (!e.toast) return u(e.allowEnterKey) ? void(Li(t, e) || pi(e, -1, 1)) : Bi() },
                        Li = (t, e) => e.focusDeny && at(t.denyButton) ? (t.denyButton.focus(), !0) : e.focusCancel && at(t.cancelButton) ? (t.cancelButton.focus(), !0) : !(!e.focusConfirm || !at(t.confirmButton) || (t.confirmButton.focus(), 0)),
                        Bi = () => { document.activeElement && "function" == typeof document.activeElement.blur && document.activeElement.blur() };

                    function Di(t) {
                        const e = A(),
                            n = jt.innerParams.get(this);
                        if (!e || K(e, n.hideClass.popup)) return s("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
                        const i = {};
                        Object.keys(t).forEach((e => { Vi.isUpdatableParameter(e) ? i[e] = t[e] : s('Invalid parameter to update: "'.concat(e, '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md')) }));
                        const o = Object.assign({}, n, i);
                        le(this, o), jt.innerParams.set(this, o), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, t), writable: !1, enumerable: !0 } })
                    }

                    function ji() {
                        const t = jt.domCache.get(this),
                            e = jt.innerParams.get(this);
                        e ? (t.popup && ve.swalCloseEventFinishedCallback && (ve.swalCloseEventFinishedCallback(), delete ve.swalCloseEventFinishedCallback), ve.deferDisposalTimer && (clearTimeout(ve.deferDisposalTimer), delete ve.deferDisposalTimer), "function" == typeof e.didDestroy && e.didDestroy(), Mi(this)) : Hi(this)
                    }
                    const Mi = t => { Hi(t), delete t.params, delete ve.keydownHandler, delete ve.keydownTarget, delete ve.currentInstance },
                        Hi = t => { t.isAwaitingPromise() ? (zi(jt, t), jt.awaitingPromise.set(t, !0)) : (zi(on, t), zi(jt, t)) },
                        zi = (t, e) => { for (const n in t) t[n].delete(e) };
                    var Fi = Object.freeze({ hideLoading: Re, disableLoading: Re, getInput: Ue, close: an, isAwaitingPromise: ln, rejectPromise: un, closePopup: an, closeModal: an, closeToast: an, enableButtons: vn, disableButtons: bn, enableInput: wn, disableInput: Cn, showValidationMessage: kn, resetValidationMessage: En, getProgressSteps: An, _main: Si, update: Di, _destroy: ji });
                    let Ni;
                    class qi {
                        constructor() {
                            if ("undefined" == typeof window) return;
                            Ni = this;
                            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
                            const i = Object.freeze(this.constructor.argsToParams(e));
                            Object.defineProperties(this, { params: { value: i, writable: !1, enumerable: !0, configurable: !0 } });
                            const o = this._main(this.params);
                            jt.promise.set(this, o)
                        }
                        then(t) { return jt.promise.get(this).then(t) } finally(t) { return jt.promise.get(this).finally(t) }
                    }
                    Object.assign(qi.prototype, Fi), Object.assign(qi, Ve), Object.keys(Fi).forEach((t => { qi[t] = function() { if (Ni) return Ni[t](...arguments) } })), qi.DismissReason = t, qi.version = "11.3.0";
                    const Vi = qi;
                    return Vi.default = Vi, Vi
                }(), void 0 !== this && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2)
            }
        },
        e = {};

    function n(i) { var o = e[i]; if (void 0 !== o) return o.exports; var s = e[i] = { exports: {} }; return t[i].call(s.exports, s, s.exports, n), s.exports }
    n.n = t => { var e = t && t.__esModule ? () => t.default : () => t; return n.d(e, { a: e }), e }, n.d = (t, e) => { for (var i in e) n.o(e, i) && !n.o(t, i) && Object.defineProperty(t, i, { enumerable: !0, get: e[i] }) }, n.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), (() => {
        "use strict";

        function t(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }

        function e(t, e) {
            for (var n = 0; n < e.length; n++) {
                var i = e[n];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i)
            }
        }

        function i(t, n, i) { return n && e(t.prototype, n), i && e(t, i), t }

        function o(t) { return o = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) { return t.__proto__ || Object.getPrototypeOf(t) }, o(t) }

        function s(t, e) { return s = Object.setPrototypeOf || function(t, e) { return t.__proto__ = e, t }, s(t, e) }

        function r(t, e) { return !e || "object" != typeof e && "function" != typeof e ? function(t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(t) : e }

        function a(t) {
            var e = function() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0 } catch (t) { return !1 } }();
            return function() {
                var n, i = o(t);
                if (e) {
                    var s = o(this).constructor;
                    n = Reflect.construct(i, arguments, s)
                } else n = i.apply(this, arguments);
                return r(this, n)
            }
        }
        var l = { exports: {} };

        function c() {}
        c.prototype = {
            on: function(t, e, n) { var i = this.e || (this.e = {}); return (i[t] || (i[t] = [])).push({ fn: e, ctx: n }), this },
            once: function(t, e, n) {
                var i = this;

                function o() { i.off(t, o), e.apply(n, arguments) }
                return o._ = e, this.on(t, o, n)
            },
            emit: function(t) { for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), i = 0, o = n.length; i < o; i++) n[i].fn.apply(n[i].ctx, e); return this },
            off: function(t, e) {
                var n = this.e || (this.e = {}),
                    i = n[t],
                    o = [];
                if (i && e)
                    for (var s = 0, r = i.length; s < r; s++) i[s].fn !== e && i[s].fn._ !== e && o.push(i[s]);
                return o.length ? n[t] = o : delete n[t], this
            }
        }, l.exports = c, l.exports.TinyEmitter = c;
        var u = l.exports,
            d = "undefined" != typeof Element ? Element.prototype : {},
            p = d.matches || d.matchesSelector || d.webkitMatchesSelector || d.mozMatchesSelector || d.msMatchesSelector || d.oMatchesSelector,
            h = function(t, e) {
                if (!t || 1 !== t.nodeType) return !1;
                if (p) return p.call(t, e);
                for (var n = t.parentNode.querySelectorAll(e), i = 0; i < n.length; i++)
                    if (n[i] == t) return !0;
                return !1
            };
        var m = function(t, e) {
            var n, i, o, s, r = 0;
            return function() { n = this, i = arguments; var t = new Date - r; return s || (t >= e ? a() : s = setTimeout(a, e - t)), o };

            function a() { s = 0, r = +new Date, o = t.apply(n, i), n = null, i = null }
        };

        function f() {}

        function g(t) { return parseFloat(t) || 0 }
        var y = function() {
                function e(n, i) { t(this, e), this.x = g(n), this.y = g(i) }
                return i(e, null, [{ key: "equals", value: function(t, e) { return t.x === e.x && t.y === e.y } }]), e
            }(),
            v = function() {
                function e(n, i, o, s, r) { t(this, e), this.id = r, this.left = n, this.top = i, this.width = o, this.height = s }
                return i(e, null, [{ key: "intersects", value: function(t, e) { return t.left < e.left + e.width && e.left < t.left + t.width && t.top < e.top + e.height && e.top < t.top + t.height } }]), e
            }(),
            b = { BASE: "shuffle", SHUFFLE_ITEM: "shuffle-item", VISIBLE: "shuffle-item--visible", HIDDEN: "shuffle-item--hidden" },
            w = 0,
            C = function() {
                function e(n, i) { t(this, e), w += 1, this.id = w, this.element = n, this.isRTL = i, this.isVisible = !0, this.isHidden = !1 }
                return i(e, [{ key: "show", value: function() { this.isVisible = !0, this.element.classList.remove(b.HIDDEN), this.element.classList.add(b.VISIBLE), this.element.removeAttribute("aria-hidden") } }, { key: "hide", value: function() { this.isVisible = !1, this.element.classList.remove(b.VISIBLE), this.element.classList.add(b.HIDDEN), this.element.setAttribute("aria-hidden", !0) } }, { key: "init", value: function() { this.addClasses([b.SHUFFLE_ITEM, b.VISIBLE]), this.applyCss(e.Css.INITIAL), this.applyCss(this.isRTL ? e.Css.DIRECTION.rtl : e.Css.DIRECTION.ltr), this.scale = e.Scale.VISIBLE, this.point = new y } }, {
                    key: "addClasses",
                    value: function(t) {
                        var e = this;
                        t.forEach((function(t) { e.element.classList.add(t) }))
                    }
                }, {
                    key: "removeClasses",
                    value: function(t) {
                        var e = this;
                        t.forEach((function(t) { e.element.classList.remove(t) }))
                    }
                }, {
                    key: "applyCss",
                    value: function(t) {
                        var e = this;
                        Object.keys(t).forEach((function(n) { e.element.style[n] = t[n] }))
                    }
                }, { key: "dispose", value: function() { this.removeClasses([b.HIDDEN, b.VISIBLE, b.SHUFFLE_ITEM]), this.element.removeAttribute("style"), this.element = null } }]), e
            }();
        C.Css = { INITIAL: { position: "absolute", top: 0, visibility: "visible", willChange: "transform" }, DIRECTION: { ltr: { left: 0 }, rtl: { right: 0 } }, VISIBLE: { before: { opacity: 1, visibility: "visible" }, after: { transitionDelay: "" } }, HIDDEN: { before: { opacity: 0 }, after: { visibility: "hidden", transitionDelay: "" } } }, C.Scale = { VISIBLE: 1, HIDDEN: .001 };
        var k = null,
            E = function() {
                if (null !== k) return k;
                var t = document.body || document.documentElement,
                    e = document.createElement("div");
                e.style.cssText = "width:10px;padding:2px;box-sizing:border-box;", t.appendChild(e);
                var n = window.getComputedStyle(e, null).width;
                return k = 10 === Math.round(g(n)), t.removeChild(e), k
            };

        function A(t, e) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : window.getComputedStyle(t, null),
                i = g(n[e]);
            return E() || "width" !== e ? E() || "height" !== e || (i += g(n.paddingTop) + g(n.paddingBottom) + g(n.borderTopWidth) + g(n.borderBottomWidth)) : i += g(n.paddingLeft) + g(n.paddingRight) + g(n.borderLeftWidth) + g(n.borderRightWidth), i
        }
        var _ = { reverse: !1, by: null, compare: null, randomize: !1, key: "element" };

        function S(t, e) {
            var n = Object.assign({}, _, e),
                i = Array.from(t),
                o = !1;
            return t.length ? n.randomize ? function(t) {
                for (var e = t.length; e;) {
                    e -= 1;
                    var n = Math.floor(Math.random() * (e + 1)),
                        i = t[n];
                    t[n] = t[e], t[e] = i
                }
                return t
            }(t) : ("function" == typeof n.by ? t.sort((function(t, e) {
                if (o) return 0;
                var i = n.by(t[n.key]),
                    s = n.by(e[n.key]);
                return void 0 === i && void 0 === s ? (o = !0, 0) : i < s || "sortFirst" === i || "sortLast" === s ? -1 : i > s || "sortLast" === i || "sortFirst" === s ? 1 : 0
            })) : "function" == typeof n.compare && t.sort(n.compare), o ? i : (n.reverse && t.reverse(), t)) : []
        }
        var T = {},
            x = "transitionend",
            P = 0;

        function I(t) { return !!T[t] && (T[t].element.removeEventListener(x, T[t].listener), T[t] = null, !0) }

        function O(t, e) {
            var n = x + (P += 1),
                i = function(t) { t.currentTarget === t.target && (I(n), e(t)) };
            return t.addEventListener(x, i), T[n] = { element: t, listener: i }, n
        }

        function L(t) { return Math.max.apply(Math, t) }

        function B(t, e, n, i) { var o = t / e; return Math.abs(Math.round(o) - o) < i && (o = Math.round(o)), Math.min(Math.ceil(o), n) }

        function D(t, e, n) { if (1 === e) return t; for (var i = [], o = 0; o <= n - e; o++) i.push(L(t.slice(o, o + e))); return i }

        function j(t, e) {
            for (var n, i = (n = t, Math.min.apply(Math, n)), o = 0, s = t.length; o < s; o++)
                if (t[o] >= i - e && t[o] <= i + e) return o;
            return 0
        }

        function M(t, e) {
            var n = {};
            t.forEach((function(t) { n[t.top] ? n[t.top].push(t) : n[t.top] = [t] }));
            var i = [],
                o = [],
                s = [];
            return Object.keys(n).forEach((function(t) {
                var r = n[t];
                o.push(r);
                var a, l = r[r.length - 1],
                    c = l.left + l.width,
                    u = Math.round((e - c) / 2),
                    d = r,
                    p = !1;
                if (u > 0) {
                    var h = [];
                    (p = r.every((function(t) {
                        var e = new v(t.left + u, t.top, t.width, t.height, t.id),
                            n = !i.some((function(t) { return v.intersects(e, t) }));
                        return h.push(e), n
                    }))) && (d = h)
                }
                if (!p && r.some((function(t) { return i.some((function(e) { var n = v.intersects(t, e); return n && (a = e), n })) }))) {
                    var m = s.findIndex((function(t) { return t.includes(a) }));
                    s.splice(m, 1, o[m])
                }
                i = i.concat(d), s.push(d)
            })), [].concat.apply([], s).sort((function(t, e) { return t.id - e.id })).map((function(t) { return new y(t.left, t.top) }))
        }

        function H(t) { return Array.from(new Set(t)) }
        var z = 0,
            F = function(e) {
                ! function(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && s(t, e)
                }(o, e);
                var n = a(o);

                function o(e) {
                    var i, s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    t(this, o), (i = n.call(this)).options = Object.assign({}, o.options, s), i.options.delimeter && (i.options.delimiter = i.options.delimeter), i.lastSort = {}, i.group = o.ALL_ITEMS, i.lastFilter = o.ALL_ITEMS, i.isEnabled = !0, i.isDestroyed = !1, i.isInitialized = !1, i._transitions = [], i.isTransitioning = !1, i._queue = [];
                    var r = i._getElementOption(e);
                    if (!r) throw new TypeError("Shuffle needs to be initialized with an element.");
                    return i.element = r, i.id = "shuffle_" + z, z += 1, i._init(), i.isInitialized = !0, i
                }
                return i(o, [{
                    key: "_init",
                    value: function() {
                        if (this.items = this._getItems(), this.sortedItems = this.items, this.options.sizer = this._getElementOption(this.options.sizer), this.element.classList.add(o.Classes.BASE), this._initItems(this.items), this._onResize = this._getResizeFunction(), window.addEventListener("resize", this._onResize), "complete" !== document.readyState) {
                            var t = this.layout.bind(this);
                            window.addEventListener("load", (function e() { window.removeEventListener("load", e), t() }))
                        }
                        var e = window.getComputedStyle(this.element, null),
                            n = o.getSize(this.element).width;
                        this._validateStyles(e), this._setColumns(n), this.filter(this.options.group, this.options.initialSort), this.element.offsetWidth, this.setItemTransitions(this.items), this.element.style.transition = "height ".concat(this.options.speed, "ms ").concat(this.options.easing)
                    }
                }, { key: "_getResizeFunction", value: function() { var t = this._handleResize.bind(this); return this.options.throttle ? this.options.throttle(t, this.options.throttleTime) : t } }, { key: "_getElementOption", value: function(t) { return "string" == typeof t ? this.element.querySelector(t) : t && t.nodeType && 1 === t.nodeType ? t : t && t.jquery ? t[0] : null } }, { key: "_validateStyles", value: function(t) { "static" === t.position && (this.element.style.position = "relative"), "hidden" !== t.overflow && (this.element.style.overflow = "hidden") } }, {
                    key: "_filter",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.lastFilter,
                            e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.items,
                            n = this._getFilteredSets(t, e);
                        return this._toggleFilterClasses(n), this.lastFilter = t, "string" == typeof t && (this.group = t), n
                    }
                }, {
                    key: "_getFilteredSets",
                    value: function(t, e) {
                        var n = this,
                            i = [],
                            s = [];
                        return t === o.ALL_ITEMS ? i = e : e.forEach((function(e) { n._doesPassFilter(t, e.element) ? i.push(e) : s.push(e) })), { visible: i, hidden: s }
                    }
                }, {
                    key: "_doesPassFilter",
                    value: function(t, e) {
                        if ("function" == typeof t) return t.call(e, e, this);
                        var n = e.getAttribute("data-" + o.FILTER_ATTRIBUTE_KEY),
                            i = this.options.delimiter ? n.split(this.options.delimiter) : JSON.parse(n);

                        function s(t) { return i.includes(t) }
                        return Array.isArray(t) ? this.options.filterMode === o.FilterMode.ANY ? t.some(s) : t.every(s) : i.includes(t)
                    }
                }, {
                    key: "_toggleFilterClasses",
                    value: function(t) {
                        var e = t.visible,
                            n = t.hidden;
                        e.forEach((function(t) { t.show() })), n.forEach((function(t) { t.hide() }))
                    }
                }, { key: "_initItems", value: function(t) { t.forEach((function(t) { t.init() })) } }, { key: "_disposeItems", value: function(t) { t.forEach((function(t) { t.dispose() })) } }, { key: "_updateItemCount", value: function() { this.visibleItems = this._getFilteredItems().length } }, {
                    key: "setItemTransitions",
                    value: function(t) {
                        var e = this.options,
                            n = e.speed,
                            i = e.easing,
                            o = this.options.useTransforms ? ["transform"] : ["top", "left"],
                            s = Object.keys(C.Css.HIDDEN.before).map((function(t) { return t.replace(/([A-Z])/g, (function(t, e) { return "-".concat(e.toLowerCase()) })) })),
                            r = o.concat(s).join();
                        t.forEach((function(t) { t.element.style.transitionDuration = n + "ms", t.element.style.transitionTimingFunction = i, t.element.style.transitionProperty = r }))
                    }
                }, { key: "_getItems", value: function() { var t = this; return Array.from(this.element.children).filter((function(e) { return h(e, t.options.itemSelector) })).map((function(e) { return new C(e, t.options.isRTL) })) } }, { key: "_mergeNewItems", value: function(t) { var e = Array.from(this.element.children); return S(this.items.concat(t), { by: function(t) { return e.indexOf(t) } }) } }, { key: "_getFilteredItems", value: function() { return this.items.filter((function(t) { return t.isVisible })) } }, { key: "_getConcealedItems", value: function() { return this.items.filter((function(t) { return !t.isVisible })) } }, { key: "_getColumnSize", value: function(t, e) { var n; return 0 === (n = "function" == typeof this.options.columnWidth ? this.options.columnWidth(t) : this.options.sizer ? o.getSize(this.options.sizer).width : this.options.columnWidth ? this.options.columnWidth : this.items.length > 0 ? o.getSize(this.items[0].element, !0).width : t) && (n = t), n + e } }, { key: "_getGutterSize", value: function(t) { return "function" == typeof this.options.gutterWidth ? this.options.gutterWidth(t) : this.options.sizer ? A(this.options.sizer, "marginLeft") : this.options.gutterWidth } }, {
                    key: "_setColumns",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : o.getSize(this.element).width,
                            e = this._getGutterSize(t),
                            n = this._getColumnSize(t, e),
                            i = (t + e) / n;
                        Math.abs(Math.round(i) - i) < this.options.columnThreshold && (i = Math.round(i)), this.cols = Math.max(Math.floor(i || 0), 1), this.containerWidth = t, this.colWidth = n
                    }
                }, { key: "_setContainerSize", value: function() { this.element.style.height = this._getContainerSize() + "px" } }, { key: "_getContainerSize", value: function() { return L(this.positions) } }, { key: "_getStaggerAmount", value: function(t) { return Math.min(t * this.options.staggerAmount, this.options.staggerAmountMax) } }, {
                    key: "_dispatch",
                    value: function(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        this.isDestroyed || (e.shuffle = this, this.emit(t, e))
                    }
                }, { key: "_resetCols", value: function() { var t = this.cols; for (this.positions = []; t;) t -= 1, this.positions.push(0) } }, {
                    key: "_layout",
                    value: function(t) {
                        var e = this,
                            n = this._getNextPositions(t),
                            i = 0;
                        t.forEach((function(t, o) {
                            function s() { t.applyCss(C.Css.VISIBLE.after) }
                            if (y.equals(t.point, n[o]) && !t.isHidden) return t.applyCss(C.Css.VISIBLE.before), void s();
                            t.point = n[o], t.scale = C.Scale.VISIBLE, t.isHidden = !1;
                            var r = e.getStylesForTransition(t, C.Css.VISIBLE.before);
                            r.transitionDelay = e._getStaggerAmount(i) + "ms", e._queue.push({ item: t, styles: r, callback: s }), i += 1
                        }))
                    }
                }, {
                    key: "_getNextPositions",
                    value: function(t) {
                        var e = this;
                        if (this.options.isCentered) {
                            var n = t.map((function(t, n) {
                                var i = o.getSize(t.element, !0),
                                    s = e._getItemPosition(i);
                                return new v(s.x, s.y, i.width, i.height, n)
                            }));
                            return this.getTransformedPositions(n, this.containerWidth)
                        }
                        return t.map((function(t) { return e._getItemPosition(o.getSize(t.element, !0)) }))
                    }
                }, { key: "_getItemPosition", value: function(t) { return function(t) { for (var e = t.itemSize, n = t.positions, i = t.gridSize, o = t.total, s = t.threshold, r = t.buffer, a = B(e.width, i, o, s), l = D(n, a, o), c = j(l, r), u = new y(i * c, l[c]), d = l[c] + e.height, p = 0; p < a; p++) n[c + p] = d; return u }({ itemSize: t, positions: this.positions, gridSize: this.colWidth, total: this.cols, threshold: this.options.columnThreshold, buffer: this.options.buffer }) } }, { key: "getTransformedPositions", value: function(t, e) { return M(t, e) } }, {
                    key: "_shrink",
                    value: function() {
                        var t = this,
                            e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._getConcealedItems(),
                            n = 0;
                        e.forEach((function(e) {
                            function i() { e.applyCss(C.Css.HIDDEN.after) }
                            if (e.isHidden) return e.applyCss(C.Css.HIDDEN.before), void i();
                            e.scale = C.Scale.HIDDEN, e.isHidden = !0;
                            var o = t.getStylesForTransition(e, C.Css.HIDDEN.before);
                            o.transitionDelay = t._getStaggerAmount(n) + "ms", t._queue.push({ item: e, styles: o, callback: i }), n += 1
                        }))
                    }
                }, { key: "_handleResize", value: function() { this.isEnabled && !this.isDestroyed && this.update() } }, {
                    key: "getStylesForTransition",
                    value: function(t, e) {
                        var n = Object.assign({}, e);
                        if (this.options.useTransforms) {
                            var i = this.options.isRTL ? "-" : "",
                                o = this.options.roundTransforms ? Math.round(t.point.x) : t.point.x,
                                s = this.options.roundTransforms ? Math.round(t.point.y) : t.point.y;
                            n.transform = "translate(".concat(i).concat(o, "px, ").concat(s, "px) scale(").concat(t.scale, ")")
                        } else this.options.isRTL ? n.right = t.point.x + "px" : n.left = t.point.x + "px", n.top = t.point.y + "px";
                        return n
                    }
                }, {
                    key: "_whenTransitionDone",
                    value: function(t, e, n) {
                        var i = O(t, (function(t) { e(), n(null, t) }));
                        this._transitions.push(i)
                    }
                }, { key: "_getTransitionFunction", value: function(t) { var e = this; return function(n) { t.item.applyCss(t.styles), e._whenTransitionDone(t.item.element, t.callback, n) } } }, {
                    key: "_processQueue",
                    value: function() {
                        this.isTransitioning && this._cancelMovement();
                        var t = this.options.speed > 0,
                            e = this._queue.length > 0;
                        e && t && this.isInitialized ? this._startTransitions(this._queue) : e ? (this._styleImmediately(this._queue), this._dispatch(o.EventType.LAYOUT)) : this._dispatch(o.EventType.LAYOUT), this._queue.length = 0
                    }
                }, {
                    key: "_startTransitions",
                    value: function(t) {
                        var e = this;
                        this.isTransitioning = !0,
                            function(t, e, n) {
                                n || ("function" == typeof e ? (n = e, e = null) : n = f);
                                var i = t && t.length;
                                if (!i) return n(null, []);
                                var o = !1,
                                    s = new Array(i);

                                function r(t) {
                                    return function(e, r) {
                                        if (!o) {
                                            if (e) return n(e, s), void(o = !0);
                                            s[t] = r, --i || n(null, s)
                                        }
                                    }
                                }
                                t.forEach(e ? function(t, n) { t.call(e, r(n)) } : function(t, e) { t(r(e)) })
                            }(t.map((function(t) { return e._getTransitionFunction(t) })), this._movementFinished.bind(this))
                    }
                }, { key: "_cancelMovement", value: function() { this._transitions.forEach(I), this._transitions.length = 0, this.isTransitioning = !1 } }, {
                    key: "_styleImmediately",
                    value: function(t) {
                        if (t.length) {
                            var e = t.map((function(t) { return t.item.element }));
                            o._skipTransitions(e, (function() { t.forEach((function(t) { t.item.applyCss(t.styles), t.callback() })) }))
                        }
                    }
                }, { key: "_movementFinished", value: function() { this._transitions.length = 0, this.isTransitioning = !1, this._dispatch(o.EventType.LAYOUT) } }, { key: "filter", value: function(t, e) { this.isEnabled && ((!t || t && 0 === t.length) && (t = o.ALL_ITEMS), this._filter(t), this._shrink(), this._updateItemCount(), this.sort(e)) } }, {
                    key: "sort",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.lastSort;
                        if (this.isEnabled) {
                            this._resetCols();
                            var e = S(this._getFilteredItems(), t);
                            this.sortedItems = e, this._layout(e), this._processQueue(), this._setContainerSize(), this.lastSort = t
                        }
                    }
                }, {
                    key: "update",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        this.isEnabled && (t || this._setColumns(), this.sort())
                    }
                }, { key: "layout", value: function() { this.update(!0) } }, {
                    key: "add",
                    value: function(t) {
                        var e = this,
                            n = H(t).map((function(t) { return new C(t, e.options.isRTL) }));
                        this._initItems(n), this._resetCols();
                        var i = S(this._mergeNewItems(n), this.lastSort),
                            o = this._filter(this.lastFilter, i),
                            s = function(t) { return n.includes(t) },
                            r = function(t) { t.scale = C.Scale.HIDDEN, t.isHidden = !0, t.applyCss(C.Css.HIDDEN.before), t.applyCss(C.Css.HIDDEN.after) },
                            a = this._getNextPositions(o.visible);
                        o.visible.forEach((function(t, n) { s(t) && (t.point = a[n], r(t), t.applyCss(e.getStylesForTransition(t, {}))) })), o.hidden.forEach((function(t) { s(t) && r(t) })), this.element.offsetWidth, this.setItemTransitions(n), this.items = this._mergeNewItems(n), this.filter(this.lastFilter)
                    }
                }, { key: "disable", value: function() { this.isEnabled = !1 } }, {
                    key: "enable",
                    value: function() {
                        var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                        this.isEnabled = !0, t && this.update()
                    }
                }, {
                    key: "remove",
                    value: function(t) {
                        var e = this;
                        if (t.length) {
                            var n = H(t),
                                i = n.map((function(t) { return e.getItemByElement(t) })).filter((function(t) { return !!t }));
                            this._toggleFilterClasses({ visible: [], hidden: i }), this._shrink(i), this.sort(), this.items = this.items.filter((function(t) { return !i.includes(t) })), this._updateItemCount(), this.once(o.EventType.LAYOUT, (function() { e._disposeItems(i), n.forEach((function(t) { t.parentNode.removeChild(t) })), e._dispatch(o.EventType.REMOVED, { collection: n }) }))
                        }
                    }
                }, { key: "getItemByElement", value: function(t) { return this.items.find((function(e) { return e.element === t })) } }, {
                    key: "resetItems",
                    value: function() {
                        var t = this;
                        this._disposeItems(this.items), this.isInitialized = !1, this.items = this._getItems(), this._initItems(this.items), this.once(o.EventType.LAYOUT, (function() { t.setItemTransitions(t.items), t.isInitialized = !0 })), this.filter(this.lastFilter)
                    }
                }, { key: "destroy", value: function() { this._cancelMovement(), window.removeEventListener("resize", this._onResize), this.element.classList.remove("shuffle"), this.element.removeAttribute("style"), this._disposeItems(this.items), this.items.length = 0, this._transitions.length = 0, this.options.sizer = null, this.element = null, this.isDestroyed = !0, this.isEnabled = !1 } }], [{
                    key: "getSize",
                    value: function(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            n = window.getComputedStyle(t, null),
                            i = A(t, "width", n),
                            o = A(t, "height", n);
                        if (e) {
                            var s = A(t, "marginLeft", n),
                                r = A(t, "marginRight", n),
                                a = A(t, "marginTop", n),
                                l = A(t, "marginBottom", n);
                            i += s + r, o += a + l
                        }
                        return { width: i, height: o }
                    }
                }, {
                    key: "_skipTransitions",
                    value: function(t, e) {
                        var n = t.map((function(t) {
                            var e = t.style,
                                n = e.transitionDuration,
                                i = e.transitionDelay;
                            return e.transitionDuration = "0ms", e.transitionDelay = "0ms", { duration: n, delay: i }
                        }));
                        e(), t[0].offsetWidth, t.forEach((function(t, e) { t.style.transitionDuration = n[e].duration, t.style.transitionDelay = n[e].delay }))
                    }
                }]), o
            }(u);
        F.ShuffleItem = C, F.ALL_ITEMS = "all", F.FILTER_ATTRIBUTE_KEY = "groups", F.EventType = { LAYOUT: "shuffle:layout", REMOVED: "shuffle:removed" }, F.Classes = b, F.FilterMode = { ANY: "any", ALL: "all" }, F.options = { group: F.ALL_ITEMS, speed: 250, easing: "cubic-bezier(0.4, 0.0, 0.2, 1)", itemSelector: "*", sizer: null, gutterWidth: 0, columnWidth: 0, delimiter: null, buffer: 0, columnThreshold: .01, initialSort: null, throttle: m, throttleTime: 300, staggerAmount: 15, staggerAmountMax: 150, useTransforms: !0, filterMode: F.FilterMode.ANY, isCentered: !1, isRTL: !1, roundTransforms: !0 }, F.Point = y, F.Rect = v, F.__sorter = S, F.__getColumnSpan = B, F.__getAvailablePositions = D, F.__getShortColumn = j, F.__getCenteredPositions = M;
        const N = F;

        function q(t, e) {
            var n = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(t);
                e && (i = i.filter((function(e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), n.push.apply(n, i)
            }
            return n
        }

        function V(t, e, n) { return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t }
        const R = function(t, e, n) {
            var i = document.querySelector(t);
            if (i) {
                var o = new N(i, function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? q(Object(n), !0).forEach((function(e) { V(t, e, n[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : q(Object(n)).forEach((function(e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }))
                        }
                        return t
                    }({}, n)),
                    s = document.querySelectorAll(e);
                s.forEach((function(t) {
                    t.addEventListener("click", (function(t) {
                        t.preventDefault();
                        for (var e = 0; e < s.length; e++) s[e].classList.remove("current");
                        this.classList.add("current");
                        var n = this.dataset.target;
                        o.filter(n)
                    }))
                }))
            }
        };
        var W = n(764),
            U = n.n(W);

        function Y(t, e) {
            var n = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(t);
                e && (i = i.filter((function(e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), n.push.apply(n, i)
            }
            return n
        }

        function K(t, e, n) { return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t }

        function Z(t, e) {
            U().fire(function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? Y(Object(n), !0).forEach((function(e) { K(t, e, n[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Y(Object(n)).forEach((function(e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }))
                }
                return t
            }({ showClass: { popup: "fadeIn" }, hideClass: { popup: "fadeOut" }, showConfirmButton: !1, showCloseButton: !0, closeButtonHtml: '\n                <i class="icon-close"></i>\n            ', customClass: { container: "modal", popup: e ? "modal_popup ".concat(e) : "modal_popup", closeButton: "modal_popup-close", htmlContainer: "modal_popup-content" } }, t))
        }
        document.addEventListener("DOMContentLoaded", (function() {
            ! function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ".team_list-item",
                    e = document.querySelectorAll(t),
                    n = document.querySelectorAll("".concat(t, " .name")),
                    i = document.querySelectorAll("".concat(t, " .profession"));
                e.forEach((function(t, e) {
                    var o = t.dataset.media;
                    t.addEventListener("click", (function() { Z({ html: '\n                    <div class="wrapper d-md-flex align-items-start align-items-lg-stretch">\n                        <div class="media">\n                            <picture>\n                                <source data-srcset="'.concat(o, '.jpg"\n                                        srcset="').concat(o, '.webp">\n                                <img class="lazy"\n                                     data-src="').concat(o, '.jpg"\n                                     src="').concat(o, '.jpg"\n                                     alt="media">\n                            </picture>\n                        </div>\n                        <div class="main d-flex flex-column justify-content-between">\n                            <h3 class="main_name">').concat(n[e].textContent, '</h3>\n                            <span class="main_text text">').concat(i[e].textContent, '</span>\n                            <ul class="main_socials d-flex align-items-center">\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-facebook icon"></i>\n                                    </a>\n                                </li>\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-youtube-play icon"></i>\n                                    </a>\n                                </li>\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-linkedin-brands icon"></i>\n                                    </a>\n                                </li>\n                            </ul>\n                            <p class="main_bio">\n                                Donec justo odio, tempus nec risus et, varius tempor turpis. Praesent quam tellus, interdum\n                                 vitae mi ut, condimentum tristique nisi. Quisque lobortis leo odio. Nullam eu sapien ullamcorper,\n                                  eleifend lorem ultricies, commodo ligula. Nunc a mauris congue elit auctor ullamcorpert\n                            </p>\n                            <div class="main_about d-flex flex-column">\n                                <span class="main_about-item">\n                                    <i class="icon-book-solid icon"></i>\n                                    <span class="text">12</span> Instructor  SMS\n                                </span>\n                                <span class="main_about-item">\n                                    <i class="icon-users icon"></i>\n                                    <span class="text">58,586</span> Learners\n                                </span>\n                            </div>\n                            <a class="main_btn" href="SMS.html">View SMS <i class="icon-arrow-right-solid icon"></i></a>\n                        </div>\n                    </div> \n            ') }, "modal_popup--team") }))
                }))
            }(), R(".list_SMS", ".list_tags-tag", { itemSelector: ".list_SMS-card" })
        }))
    })()
})();