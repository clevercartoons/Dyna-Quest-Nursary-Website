/**
 * Dyna Quest
 * Dyna Quest is an Online Education Website Template Kit
 * Exclusively on https://1.envato.market/Dyna Quest-html
 *
 * @encoding        UTF-8
 * @version         1.0.0
 * @copyright       (C) 2018 - 2022 A. KOMANE ( https://merkulov.design/ ). All rights reserved.
 * @license         Envato License https://1.envato.market/KYbje
 * @contributors    Lamber Lilith (winter.rituel@gmail.com)
 * @support         help@merkulov.design
 **/
(() => {
    var t = {
            764: function(t) {
                t.exports = function() {
                    "use strict";
                    const t = Object.freeze({ cancel: "cancel", backdrop: "backdrop", close: "close", esc: "esc", timer: "timer" }),
                        e = "SweetAlert2:",
                        n = t => { const e = []; for (let n = 0; n < t.length; n++) - 1 === e.indexOf(t[n]) && e.push(t[n]); return e },
                        o = t => t.charAt(0).toUpperCase() + t.slice(1),
                        i = t => Array.prototype.slice.call(t),
                        s = t => { console.warn("".concat(e, " ").concat("object" == typeof t ? t.join(" ") : t)) },
                        a = t => { console.error("".concat(e, " ").concat(t)) },
                        r = [],
                        c = t => { r.includes(t) || (r.push(t), s(t)) },
                        l = (t, e) => { c('"'.concat(t, '" is deprecated and will be removed in the next major release. Please use "').concat(e, '" instead.')) },
                        u = t => "function" == typeof t ? t() : t,
                        d = t => t && "function" == typeof t.toPromise,
                        p = t => d(t) ? t.toPromise() : Promise.resolve(t),
                        m = t => t && Promise.resolve(t) === t,
                        h = t => "object" == typeof t && t.jquery,
                        g = t => t instanceof Element || h(t),
                        f = t => { const e = {}; return "object" != typeof t[0] || g(t[0]) ? ["title", "html", "icon"].forEach(((n, o) => { const i = t[o]; "string" == typeof i || g(i) ? e[n] = i : void 0 !== i && a("Unexpected type of ".concat(n, '! Expected "string" or "Element", got ').concat(typeof i)) })) : Object.assign(e, t[0]), e },
                        b = "swal2-",
                        y = t => { const e = {}; for (const n in t) e[t[n]] = b + t[n]; return e },
                        w = y(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"]),
                        v = y(["success", "warning", "info", "question", "error"]),
                        C = () => document.body.querySelector(".".concat(w.container)),
                        A = t => { const e = C(); return e ? e.querySelector(t) : null },
                        k = t => A(".".concat(t)),
                        x = () => k(w.popup),
                        P = () => k(w.icon),
                        E = () => k(w.title),
                        B = () => k(w["html-container"]),
                        V = () => k(w.image),
                        O = () => k(w["progress-steps"]),
                        S = () => k(w["validation-message"]),
                        T = () => A(".".concat(w.actions, " .").concat(w.confirm)),
                        L = () => A(".".concat(w.actions, " .").concat(w.deny)),
                        j = () => k(w["input-label"]),
                        D = () => A(".".concat(w.loader)),
                        q = () => A(".".concat(w.actions, " .").concat(w.cancel)),
                        M = () => k(w.actions),
                        I = () => k(w.footer),
                        F = () => k(w["timer-progress-bar"]),
                        H = () => k(w.close),
                        N = '\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n',
                        _ = () => {
                            const t = i(x().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort(((t, e) => (t = parseInt(t.getAttribute("tabindex"))) > (e = parseInt(e.getAttribute("tabindex"))) ? 1 : t < e ? -1 : 0)),
                                e = i(x().querySelectorAll(N)).filter((t => "-1" !== t.getAttribute("tabindex")));
                            return n(t.concat(e)).filter((t => rt(t)))
                        },
                        U = () => !Y(document.body, w["toast-shown"]) && !Y(document.body, w["no-backdrop"]),
                        R = () => x() && Y(x(), w.toast),
                        z = () => x().hasAttribute("data-loading"),
                        W = { previousBodyPadding: null },
                        K = (t, e) => {
                            if (t.textContent = "", e) {
                                const n = (new DOMParser).parseFromString(e, "text/html");
                                i(n.querySelector("head").childNodes).forEach((e => { t.appendChild(e) })), i(n.querySelector("body").childNodes).forEach((e => { t.appendChild(e) }))
                            }
                        },
                        Y = (t, e) => {
                            if (!e) return !1;
                            const n = e.split(/\s+/);
                            for (let e = 0; e < n.length; e++)
                                if (!t.classList.contains(n[e])) return !1;
                            return !0
                        },
                        Z = (t, e) => { i(t.classList).forEach((n => { Object.values(w).includes(n) || Object.values(v).includes(n) || Object.values(e.showClass).includes(n) || t.classList.remove(n) })) },
                        G = (t, e, n) => {
                            if (Z(t, e), e.customClass && e.customClass[n]) {
                                if ("string" != typeof e.customClass[n] && !e.customClass[n].forEach) return s("Invalid type of customClass.".concat(n, '! Expected string or iterable object, got "').concat(typeof e.customClass[n], '"'));
                                Q(t, e.customClass[n])
                            }
                        },
                        J = (t, e) => {
                            if (!e) return null;
                            switch (e) {
                                case "select":
                                case "textarea":
                                case "file":
                                    return et(t, w[e]);
                                case "checkbox":
                                    return t.querySelector(".".concat(w.checkbox, " input"));
                                case "radio":
                                    return t.querySelector(".".concat(w.radio, " input:checked")) || t.querySelector(".".concat(w.radio, " input:first-child"));
                                case "range":
                                    return t.querySelector(".".concat(w.range, " input"));
                                default:
                                    return et(t, w.input)
                            }
                        },
                        X = t => {
                            if (t.focus(), "file" !== t.type) {
                                const e = t.value;
                                t.value = "", t.value = e
                            }
                        },
                        $ = (t, e, n) => { t && e && ("string" == typeof e && (e = e.split(/\s+/).filter(Boolean)), e.forEach((e => { t.forEach ? t.forEach((t => { n ? t.classList.add(e) : t.classList.remove(e) })) : n ? t.classList.add(e) : t.classList.remove(e) }))) },
                        Q = (t, e) => { $(t, e, !0) },
                        tt = (t, e) => { $(t, e, !1) },
                        et = (t, e) => {
                            for (let n = 0; n < t.childNodes.length; n++)
                                if (Y(t.childNodes[n], e)) return t.childNodes[n]
                        },
                        nt = (t, e, n) => { n === "".concat(parseInt(n)) && (n = parseInt(n)), n || 0 === parseInt(n) ? t.style[e] = "number" == typeof n ? "".concat(n, "px") : n : t.style.removeProperty(e) },
                        ot = function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex";
                            t.style.display = e
                        },
                        it = t => { t.style.display = "none" },
                        st = (t, e, n, o) => {
                            const i = t.querySelector(e);
                            i && (i.style[n] = o)
                        },
                        at = (t, e, n) => { e ? ot(t, n) : it(t) },
                        rt = t => !(!t || !(t.offsetWidth || t.offsetHeight || t.getClientRects().length)),
                        ct = () => !rt(T()) && !rt(L()) && !rt(q()),
                        lt = t => !!(t.scrollHeight > t.clientHeight),
                        ut = t => {
                            const e = window.getComputedStyle(t),
                                n = parseFloat(e.getPropertyValue("animation-duration") || "0"),
                                o = parseFloat(e.getPropertyValue("transition-duration") || "0");
                            return n > 0 || o > 0
                        },
                        dt = function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                            const n = F();
                            rt(n) && (e && (n.style.transition = "none", n.style.width = "100%"), setTimeout((() => { n.style.transition = "width ".concat(t / 1e3, "s linear"), n.style.width = "0%" }), 10))
                        },
                        pt = () => {
                            const t = F(),
                                e = parseInt(window.getComputedStyle(t).width);
                            t.style.removeProperty("transition"), t.style.width = "100%";
                            const n = parseInt(window.getComputedStyle(t).width),
                                o = parseInt(e / n * 100);
                            t.style.removeProperty("transition"), t.style.width = "".concat(o, "%")
                        },
                        mt = () => "undefined" == typeof window || "undefined" == typeof document,
                        ht = '\n <div aria-labelledby="'.concat(w.title, '" aria-describedby="').concat(w["html-container"], '" class="').concat(w.popup, '" tabindex="-1">\n   <button type="button" class="').concat(w.close, '"></button>\n   <ul class="').concat(w["progress-steps"], '"></ul>\n   <div class="').concat(w.icon, '"></div>\n   <img class="').concat(w.image, '" />\n   <h2 class="').concat(w.title, '" id="').concat(w.title, '"></h2>\n   <div class="').concat(w["html-container"], '" id="').concat(w["html-container"], '"></div>\n   <input class="').concat(w.input, '" />\n   <input type="file" class="').concat(w.file, '" />\n   <div class="').concat(w.range, '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(w.select, '"></select>\n   <div class="').concat(w.radio, '"></div>\n   <label for="').concat(w.checkbox, '" class="').concat(w.checkbox, '">\n     <input type="checkbox" />\n     <span class="').concat(w.label, '"></span>\n   </label>\n   <textarea class="').concat(w.textarea, '"></textarea>\n   <div class="').concat(w["validation-message"], '" id="').concat(w["validation-message"], '"></div>\n   <div class="').concat(w.actions, '">\n     <div class="').concat(w.loader, '"></div>\n     <button type="button" class="').concat(w.confirm, '"></button>\n     <button type="button" class="').concat(w.deny, '"></button>\n     <button type="button" class="').concat(w.cancel, '"></button>\n   </div>\n   <div class="').concat(w.footer, '"></div>\n   <div class="').concat(w["timer-progress-bar-container"], '">\n     <div class="').concat(w["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""),
                        gt = () => { const t = C(); return !!t && (t.remove(), tt([document.documentElement, document.body], [w["no-backdrop"], w["toast-shown"], w["has-column"]]), !0) },
                        ft = () => { Ro.isVisible() && Ro.resetValidationMessage() },
                        bt = () => {
                            const t = x(),
                                e = et(t, w.input),
                                n = et(t, w.file),
                                o = t.querySelector(".".concat(w.range, " input")),
                                i = t.querySelector(".".concat(w.range, " output")),
                                s = et(t, w.select),
                                a = t.querySelector(".".concat(w.checkbox, " input")),
                                r = et(t, w.textarea);
                            e.oninput = ft, n.onchange = ft, s.onchange = ft, a.onchange = ft, r.oninput = ft, o.oninput = () => { ft(), i.value = o.value }, o.onchange = () => { ft(), o.nextSibling.value = o.value }
                        },
                        yt = t => "string" == typeof t ? document.querySelector(t) : t,
                        wt = t => {
                            const e = x();
                            e.setAttribute("role", t.toast ? "alert" : "dialog"), e.setAttribute("aria-live", t.toast ? "polite" : "assertive"), t.toast || e.setAttribute("aria-modal", "true")
                        },
                        vt = t => { "rtl" === window.getComputedStyle(t).direction && Q(C(), w.rtl) },
                        Ct = t => {
                            const e = gt();
                            if (mt()) return void a("SweetAlert2 requires document to initialize");
                            const n = document.createElement("div");
                            n.className = w.container, e && Q(n, w["no-transition"]), K(n, ht);
                            const o = yt(t.target);
                            o.appendChild(n), wt(t), vt(o), bt()
                        },
                        At = (t, e) => { t instanceof HTMLElement ? e.appendChild(t) : "object" == typeof t ? kt(t, e) : t && K(e, t) },
                        kt = (t, e) => { t.jquery ? xt(e, t) : K(e, t.toString()) },
                        xt = (t, e) => {
                            if (t.textContent = "", 0 in e)
                                for (let n = 0; n in e; n++) t.appendChild(e[n].cloneNode(!0));
                            else t.appendChild(e.cloneNode(!0))
                        },
                        Pt = (() => {
                            if (mt()) return !1;
                            const t = document.createElement("div"),
                                e = { WebkitAnimation: "webkitAnimationEnd", OAnimation: "oAnimationEnd oanimationend", animation: "animationend" };
                            for (const n in e)
                                if (Object.prototype.hasOwnProperty.call(e, n) && void 0 !== t.style[n]) return e[n];
                            return !1
                        })(),
                        Et = () => {
                            const t = document.createElement("div");
                            t.className = w["scrollbar-measure"], document.body.appendChild(t);
                            const e = t.getBoundingClientRect().width - t.clientWidth;
                            return document.body.removeChild(t), e
                        },
                        Bt = (t, e) => {
                            const n = M(),
                                o = D();
                            e.showConfirmButton || e.showDenyButton || e.showCancelButton ? ot(n) : it(n), G(n, e, "actions"), Vt(n, o, e), K(o, e.loaderHtml), G(o, e, "loader")
                        };

                    function Vt(t, e, n) {
                        const o = T(),
                            i = L(),
                            s = q();
                        St(o, "confirm", n), St(i, "deny", n), St(s, "cancel", n), Ot(o, i, s, n), n.reverseButtons && (n.toast ? (t.insertBefore(s, o), t.insertBefore(i, o)) : (t.insertBefore(s, e), t.insertBefore(i, e), t.insertBefore(o, e)))
                    }

                    function Ot(t, e, n, o) {
                        if (!o.buttonsStyling) return tt([t, e, n], w.styled);
                        Q([t, e, n], w.styled), o.confirmButtonColor && (t.style.backgroundColor = o.confirmButtonColor, Q(t, w["default-outline"])), o.denyButtonColor && (e.style.backgroundColor = o.denyButtonColor, Q(e, w["default-outline"])), o.cancelButtonColor && (n.style.backgroundColor = o.cancelButtonColor, Q(n, w["default-outline"]))
                    }

                    function St(t, e, n) { at(t, n["show".concat(o(e), "Button")], "inline-block"), K(t, n["".concat(e, "ButtonText")]), t.setAttribute("aria-label", n["".concat(e, "ButtonAriaLabel")]), t.className = w[e], G(t, n, "".concat(e, "Button")), Q(t, n["".concat(e, "ButtonClass")]) }

                    function Tt(t, e) { "string" == typeof e ? t.style.background = e : e || Q([document.documentElement, document.body], w["no-backdrop"]) }

                    function Lt(t, e) { e in w ? Q(t, w[e]) : (s('The "position" parameter is not valid, defaulting to "center"'), Q(t, w.center)) }

                    function jt(t, e) {
                        if (e && "string" == typeof e) {
                            const n = "grow-".concat(e);
                            n in w && Q(t, w[n])
                        }
                    }
                    const Dt = (t, e) => {
                        const n = C();
                        n && (Tt(n, e.backdrop), Lt(n, e.position), jt(n, e.grow), G(n, e, "container"))
                    };
                    var qt = { awaitingPromise: new WeakMap, promise: new WeakMap, innerParams: new WeakMap, domCache: new WeakMap };
                    const Mt = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
                        It = (t, e) => {
                            const n = x(),
                                o = qt.innerParams.get(t),
                                i = !o || e.input !== o.input;
                            Mt.forEach((t => {
                                const o = w[t],
                                    s = et(n, o);
                                Nt(t, e.inputAttributes), s.className = o, i && it(s)
                            })), e.input && (i && Ft(e), _t(e))
                        },
                        Ft = t => {
                            if (!Wt[t.input]) return a('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(t.input, '"'));
                            const e = zt(t.input),
                                n = Wt[t.input](e, t);
                            ot(n), setTimeout((() => { X(n) }))
                        },
                        Ht = t => {
                            for (let e = 0; e < t.attributes.length; e++) {
                                const n = t.attributes[e].name;
                                ["type", "value", "style"].includes(n) || t.removeAttribute(n)
                            }
                        },
                        Nt = (t, e) => { const n = J(x(), t); if (n) { Ht(n); for (const t in e) n.setAttribute(t, e[t]) } },
                        _t = t => {
                            const e = zt(t.input);
                            t.customClass && Q(e, t.customClass.input)
                        },
                        Ut = (t, e) => { t.placeholder && !e.inputPlaceholder || (t.placeholder = e.inputPlaceholder) },
                        Rt = (t, e, n) => {
                            if (n.inputLabel) {
                                t.id = w.input;
                                const o = document.createElement("label"),
                                    i = w["input-label"];
                                o.setAttribute("for", t.id), o.className = i, Q(o, n.customClass.inputLabel), o.innerText = n.inputLabel, e.insertAdjacentElement("beforebegin", o)
                            }
                        },
                        zt = t => { const e = w[t] ? w[t] : w.input; return et(x(), e) },
                        Wt = {};
                    Wt.text = Wt.email = Wt.password = Wt.number = Wt.tel = Wt.url = (t, e) => ("string" == typeof e.inputValue || "number" == typeof e.inputValue ? t.value = e.inputValue : m(e.inputValue) || s('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(typeof e.inputValue, '"')), Rt(t, t, e), Ut(t, e), t.type = e.input, t), Wt.file = (t, e) => (Rt(t, t, e), Ut(t, e), t), Wt.range = (t, e) => {
                        const n = t.querySelector("input"),
                            o = t.querySelector("output");
                        return n.value = e.inputValue, n.type = e.input, o.value = e.inputValue, Rt(n, t, e), t
                    }, Wt.select = (t, e) => {
                        if (t.textContent = "", e.inputPlaceholder) {
                            const n = document.createElement("option");
                            K(n, e.inputPlaceholder), n.value = "", n.disabled = !0, n.selected = !0, t.appendChild(n)
                        }
                        return Rt(t, t, e), t
                    }, Wt.radio = t => (t.textContent = "", t), Wt.checkbox = (t, e) => {
                        const n = J(x(), "checkbox");
                        n.value = 1, n.id = w.checkbox, n.checked = Boolean(e.inputValue);
                        const o = t.querySelector("span");
                        return K(o, e.inputPlaceholder), t
                    }, Wt.textarea = (t, e) => {
                        t.value = e.inputValue, Ut(t, e), Rt(t, t, e);
                        const n = t => parseInt(window.getComputedStyle(t).marginLeft) + parseInt(window.getComputedStyle(t).marginRight);
                        return setTimeout((() => {
                            if ("MutationObserver" in window) {
                                const e = parseInt(window.getComputedStyle(x()).width);
                                new MutationObserver((() => {
                                    const o = t.offsetWidth + n(t);
                                    x().style.width = o > e ? "".concat(o, "px") : null
                                })).observe(t, { attributes: !0, attributeFilter: ["style"] })
                            }
                        })), t
                    };
                    const Kt = (t, e) => {
                            const n = B();
                            G(n, e, "htmlContainer"), e.html ? (At(e.html, n), ot(n, "block")) : e.text ? (n.textContent = e.text, ot(n, "block")) : it(n), It(t, e)
                        },
                        Yt = (t, e) => {
                            const n = I();
                            at(n, e.footer), e.footer && At(e.footer, n), G(n, e, "footer")
                        },
                        Zt = (t, e) => {
                            const n = H();
                            K(n, e.closeButtonHtml), G(n, e, "closeButton"), at(n, e.showCloseButton), n.setAttribute("aria-label", e.closeButtonAriaLabel)
                        },
                        Gt = (t, e) => {
                            const n = qt.innerParams.get(t),
                                o = P();
                            return n && e.icon === n.icon ? ($t(o, e), void Jt(o, e)) : e.icon || e.iconHtml ? e.icon && -1 === Object.keys(v).indexOf(e.icon) ? (a('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(e.icon, '"')), it(o)) : (ot(o), $t(o, e), Jt(o, e), void Q(o, e.showClass.icon)) : it(o)
                        },
                        Jt = (t, e) => {
                            for (const n in v) e.icon !== n && tt(t, v[n]);
                            Q(t, v[e.icon]), Qt(t, e), Xt(), G(t, e, "icon")
                        },
                        Xt = () => {
                            const t = x(),
                                e = window.getComputedStyle(t).getPropertyValue("background-color"),
                                n = t.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix");
                            for (let t = 0; t < n.length; t++) n[t].style.backgroundColor = e
                        },
                        $t = (t, e) => { t.textContent = "", e.iconHtml ? K(t, te(e.iconHtml)) : "success" === e.icon ? K(t, '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    ') : "error" === e.icon ? K(t, '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    ') : K(t, te({ question: "?", warning: "!", info: "i" }[e.icon])) },
                        Qt = (t, e) => {
                            if (e.iconColor) {
                                t.style.color = e.iconColor, t.style.borderColor = e.iconColor;
                                for (const n of[".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]) st(t, n, "backgroundColor", e.iconColor);
                                st(t, ".swal2-success-ring", "borderColor", e.iconColor)
                            }
                        },
                        te = t => '<div class="'.concat(w["icon-content"], '">').concat(t, "</div>"),
                        ee = (t, e) => {
                            const n = V();
                            if (!e.imageUrl) return it(n);
                            ot(n, ""), n.setAttribute("src", e.imageUrl), n.setAttribute("alt", e.imageAlt), nt(n, "width", e.imageWidth), nt(n, "height", e.imageHeight), n.className = w.image, G(n, e, "image")
                        },
                        ne = t => { const e = document.createElement("li"); return Q(e, w["progress-step"]), K(e, t), e },
                        oe = t => { const e = document.createElement("li"); return Q(e, w["progress-step-line"]), t.progressStepsDistance && (e.style.width = t.progressStepsDistance), e },
                        ie = (t, e) => {
                            const n = O();
                            if (!e.progressSteps || 0 === e.progressSteps.length) return it(n);
                            ot(n), n.textContent = "", e.currentProgressStep >= e.progressSteps.length && s("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), e.progressSteps.forEach(((t, o) => {
                                const i = ne(t);
                                if (n.appendChild(i), o === e.currentProgressStep && Q(i, w["active-progress-step"]), o !== e.progressSteps.length - 1) {
                                    const t = oe(e);
                                    n.appendChild(t)
                                }
                            }))
                        },
                        se = (t, e) => {
                            const n = E();
                            at(n, e.title || e.titleText, "block"), e.title && At(e.title, n), e.titleText && (n.innerText = e.titleText), G(n, e, "title")
                        },
                        ae = (t, e) => {
                            const n = C(),
                                o = x();
                            e.toast ? (nt(n, "width", e.width), o.style.width = "100%", o.insertBefore(D(), P())) : nt(o, "width", e.width), nt(o, "padding", e.padding), e.color && (o.style.color = e.color), e.background && (o.style.background = e.background), it(S()), re(o, e)
                        },
                        re = (t, e) => { t.className = "".concat(w.popup, " ").concat(rt(t) ? e.showClass.popup : ""), e.toast ? (Q([document.documentElement, document.body], w["toast-shown"]), Q(t, w.toast)) : Q(t, w.modal), G(t, e, "popup"), "string" == typeof e.customClass && Q(t, e.customClass), e.icon && Q(t, w["icon-".concat(e.icon)]) },
                        ce = (t, e) => { ae(t, e), Dt(t, e), ie(t, e), Gt(t, e), ee(t, e), se(t, e), Zt(t, e), Kt(t, e), Bt(t, e), Yt(t, e), "function" == typeof e.didRender && e.didRender(x()) },
                        le = () => rt(x()),
                        ue = () => T() && T().click(),
                        de = () => L() && L().click(),
                        pe = () => q() && q().click();

                    function me() { const t = this; for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) n[o] = arguments[o]; return new t(...n) }

                    function he(t) {
                        class e extends(this) { _main(e, n) { return super._main(e, Object.assign({}, t, n)) } }
                        return e
                    }
                    const ge = t => {
                            let e = x();
                            e || Ro.fire(), e = x();
                            const n = D();
                            R() ? it(P()) : fe(e, t), ot(n), e.setAttribute("data-loading", !0), e.setAttribute("aria-busy", !0), e.focus()
                        },
                        fe = (t, e) => {
                            const n = M(),
                                o = D();
                            !e && rt(T()) && (e = T()), ot(n), e && (it(e), o.setAttribute("data-button-to-replace", e.className)), o.parentNode.insertBefore(o, e), Q([t, n], w.loading)
                        },
                        be = 100,
                        ye = {},
                        we = () => { ye.previousActiveElement && ye.previousActiveElement.focus ? (ye.previousActiveElement.focus(), ye.previousActiveElement = null) : document.body && document.body.focus() },
                        ve = t => new Promise((e => {
                            if (!t) return e();
                            const n = window.scrollX,
                                o = window.scrollY;
                            ye.restoreFocusTimeout = setTimeout((() => { we(), e() }), be), window.scrollTo(n, o)
                        })),
                        Ce = () => ye.timeout && ye.timeout.getTimerLeft(),
                        Ae = () => { if (ye.timeout) return pt(), ye.timeout.stop() },
                        ke = () => { if (ye.timeout) { const t = ye.timeout.start(); return dt(t), t } },
                        xe = () => { const t = ye.timeout; return t && (t.running ? Ae() : ke()) },
                        Pe = t => { if (ye.timeout) { const e = ye.timeout.increase(t); return dt(e, !0), e } },
                        Ee = () => ye.timeout && ye.timeout.isRunning();
                    let Be = !1;
                    const Ve = {};

                    function Oe() { Ve[arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, Be || (document.body.addEventListener("click", Se), Be = !0) }
                    const Se = t => {
                            for (let e = t.target; e && e !== document; e = e.parentNode)
                                for (const t in Ve) { const n = e.getAttribute(t); if (n) return void Ve[t].fire({ template: n }) }
                        },
                        Te = { title: "", titleText: "", text: "", html: "", footer: "", icon: void 0, iconColor: void 0, iconHtml: void 0, template: void 0, toast: !1, showClass: { popup: "swal2-show", backdrop: "swal2-backdrop-show", icon: "swal2-icon-show" }, hideClass: { popup: "swal2-hide", backdrop: "swal2-backdrop-hide", icon: "swal2-icon-hide" }, customClass: {}, target: "body", color: void 0, backdrop: !0, heightAuto: !0, allowOutsideClick: !0, allowEscapeKey: !0, allowEnterKey: !0, stopKeydownPropagation: !0, keydownListenerCapture: !1, showConfirmButton: !0, showDenyButton: !1, showCancelButton: !1, preConfirm: void 0, preDeny: void 0, confirmButtonText: "OK", confirmButtonAriaLabel: "", confirmButtonColor: void 0, denyButtonText: "No", denyButtonAriaLabel: "", denyButtonColor: void 0, cancelButtonText: "Cancel", cancelButtonAriaLabel: "", cancelButtonColor: void 0, buttonsStyling: !0, reverseButtons: !1, focusConfirm: !0, focusDeny: !1, focusCancel: !1, returnFocus: !0, showCloseButton: !1, closeButtonHtml: "&times;", closeButtonAriaLabel: "Close this dialog", loaderHtml: "", showLoaderOnConfirm: !1, showLoaderOnDeny: !1, imageUrl: void 0, imageWidth: void 0, imageHeight: void 0, imageAlt: "", timer: void 0, timerProgressBar: !1, width: void 0, padding: void 0, background: void 0, input: void 0, inputPlaceholder: "", inputLabel: "", inputValue: "", inputOptions: {}, inputAutoTrim: !0, inputAttributes: {}, inputValidator: void 0, returnInputValueOnDeny: !1, validationMessage: void 0, grow: !1, position: "center", progressSteps: [], currentProgressStep: void 0, progressStepsDistance: void 0, willOpen: void 0, didOpen: void 0, didRender: void 0, willClose: void 0, didClose: void 0, didDestroy: void 0, scrollbarPadding: !0 },
                        Le = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
                        je = {},
                        De = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
                        qe = t => Object.prototype.hasOwnProperty.call(Te, t),
                        Me = t => -1 !== Le.indexOf(t),
                        Ie = t => je[t],
                        Fe = t => { qe(t) || s('Unknown parameter "'.concat(t, '"')) },
                        He = t => { De.includes(t) && s('The parameter "'.concat(t, '" is incompatible with toasts')) },
                        Ne = t => { Ie(t) && l(t, Ie(t)) },
                        _e = t => {!t.backdrop && t.allowOutsideClick && s('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'); for (const e in t) Fe(e), t.toast && He(e), Ne(e) };
                    var Ue = Object.freeze({ isValidParameter: qe, isUpdatableParameter: Me, isDeprecatedParameter: Ie, argsToParams: f, isVisible: le, clickConfirm: ue, clickDeny: de, clickCancel: pe, getContainer: C, getPopup: x, getTitle: E, getHtmlContainer: B, getImage: V, getIcon: P, getInputLabel: j, getCloseButton: H, getActions: M, getConfirmButton: T, getDenyButton: L, getCancelButton: q, getLoader: D, getFooter: I, getTimerProgressBar: F, getFocusableElements: _, getValidationMessage: S, isLoading: z, fire: me, mixin: he, showLoading: ge, enableLoading: ge, getTimerLeft: Ce, stopTimer: Ae, resumeTimer: ke, toggleTimer: xe, increaseTimer: Pe, isTimerRunning: Ee, bindClickHandler: Oe });

                    function Re() {
                        const t = qt.innerParams.get(this);
                        if (!t) return;
                        const e = qt.domCache.get(this);
                        it(e.loader), R() ? t.icon && ot(P()) : ze(e), tt([e.popup, e.actions], w.loading), e.popup.removeAttribute("aria-busy"), e.popup.removeAttribute("data-loading"), e.confirmButton.disabled = !1, e.denyButton.disabled = !1, e.cancelButton.disabled = !1
                    }
                    const ze = t => {
                        const e = t.popup.getElementsByClassName(t.loader.getAttribute("data-button-to-replace"));
                        e.length ? ot(e[0], "inline-block") : ct() && it(t.actions)
                    };

                    function We(t) {
                        const e = qt.innerParams.get(t || this),
                            n = qt.domCache.get(t || this);
                        return n ? J(n.popup, e.input) : null
                    }
                    const Ke = () => { null === W.previousBodyPadding && document.body.scrollHeight > window.innerHeight && (W.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(W.previousBodyPadding + Et(), "px")) },
                        Ye = () => { null !== W.previousBodyPadding && (document.body.style.paddingRight = "".concat(W.previousBodyPadding, "px"), W.previousBodyPadding = null) },
                        Ze = () => {
                            if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1) && !Y(document.body, w.iosfix)) {
                                const t = document.body.scrollTop;
                                document.body.style.top = "".concat(-1 * t, "px"), Q(document.body, w.iosfix), Je(), Ge()
                            }
                        },
                        Ge = () => {
                            if (!navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i)) {
                                const t = 44;
                                x().scrollHeight > window.innerHeight - t && (C().style.paddingBottom = "".concat(t, "px"))
                            }
                        },
                        Je = () => {
                            const t = C();
                            let e;
                            t.ontouchstart = t => { e = Xe(t) }, t.ontouchmove = t => { e && (t.preventDefault(), t.stopPropagation()) }
                        },
                        Xe = t => {
                            const e = t.target,
                                n = C();
                            return !($e(t) || Qe(t) || e !== n && (lt(n) || "INPUT" === e.tagName || "TEXTAREA" === e.tagName || lt(B()) && B().contains(e)))
                        },
                        $e = t => t.touches && t.touches.length && "stylus" === t.touches[0].touchType,
                        Qe = t => t.touches && t.touches.length > 1,
                        tn = () => {
                            if (Y(document.body, w.iosfix)) {
                                const t = parseInt(document.body.style.top, 10);
                                tt(document.body, w.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * t
                            }
                        },
                        en = () => { i(document.body.children).forEach((t => { t === C() || t.contains(C()) || (t.hasAttribute("aria-hidden") && t.setAttribute("data-previous-aria-hidden", t.getAttribute("aria-hidden")), t.setAttribute("aria-hidden", "true")) })) },
                        nn = () => { i(document.body.children).forEach((t => { t.hasAttribute("data-previous-aria-hidden") ? (t.setAttribute("aria-hidden", t.getAttribute("data-previous-aria-hidden")), t.removeAttribute("data-previous-aria-hidden")) : t.removeAttribute("aria-hidden") })) };
                    var on = { swalPromiseResolve: new WeakMap, swalPromiseReject: new WeakMap };

                    function sn(t, e, n, o) { R() ? gn(t, o) : (ve(n).then((() => gn(t, o))), ye.keydownTarget.removeEventListener("keydown", ye.keydownHandler, { capture: ye.keydownListenerCapture }), ye.keydownHandlerAdded = !1), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ? (e.setAttribute("style", "display:none !important"), e.removeAttribute("class"), e.innerHTML = "") : e.remove(), U() && (Ye(), tn(), nn()), an() }

                    function an() { tt([document.documentElement, document.body], [w.shown, w["height-auto"], w["no-backdrop"], w["toast-shown"]]) }

                    function rn(t) {
                        t = pn(t);
                        const e = on.swalPromiseResolve.get(this),
                            n = ln(this);
                        this.isAwaitingPromise() ? t.isDismissed || (dn(this), e(t)) : n && e(t)
                    }

                    function cn() { return !!qt.awaitingPromise.get(this) }
                    const ln = t => {
                        const e = x();
                        if (!e) return !1;
                        const n = qt.innerParams.get(t);
                        if (!n || Y(e, n.hideClass.popup)) return !1;
                        tt(e, n.showClass.popup), Q(e, n.hideClass.popup);
                        const o = C();
                        return tt(o, n.showClass.backdrop), Q(o, n.hideClass.backdrop), mn(t, e, n), !0
                    };

                    function un(t) {
                        const e = on.swalPromiseReject.get(this);
                        dn(this), e && e(t)
                    }
                    const dn = t => { t.isAwaitingPromise() && (qt.awaitingPromise.delete(t), qt.innerParams.get(t) || t._destroy()) },
                        pn = t => void 0 === t ? { isConfirmed: !1, isDenied: !1, isDismissed: !0 } : Object.assign({ isConfirmed: !1, isDenied: !1, isDismissed: !1 }, t),
                        mn = (t, e, n) => {
                            const o = C(),
                                i = Pt && ut(e);
                            "function" == typeof n.willClose && n.willClose(e), i ? hn(t, e, o, n.returnFocus, n.didClose) : sn(t, o, n.returnFocus, n.didClose)
                        },
                        hn = (t, e, n, o, i) => { ye.swalCloseEventFinishedCallback = sn.bind(null, t, n, o, i), e.addEventListener(Pt, (function(t) { t.target === e && (ye.swalCloseEventFinishedCallback(), delete ye.swalCloseEventFinishedCallback) })) },
                        gn = (t, e) => { setTimeout((() => { "function" == typeof e && e.bind(t.params)(), t._destroy() })) };

                    function fn(t, e, n) {
                        const o = qt.domCache.get(t);
                        e.forEach((t => { o[t].disabled = n }))
                    }

                    function bn(t, e) { if (!t) return !1; if ("radio" === t.type) { const n = t.parentNode.parentNode.querySelectorAll("input"); for (let t = 0; t < n.length; t++) n[t].disabled = e } else t.disabled = e }

                    function yn() { fn(this, ["confirmButton", "denyButton", "cancelButton"], !1) }

                    function wn() { fn(this, ["confirmButton", "denyButton", "cancelButton"], !0) }

                    function vn() { return bn(this.getInput(), !1) }

                    function Cn() { return bn(this.getInput(), !0) }

                    function An(t) {
                        const e = qt.domCache.get(this),
                            n = qt.innerParams.get(this);
                        K(e.validationMessage, t), e.validationMessage.className = w["validation-message"], n.customClass && n.customClass.validationMessage && Q(e.validationMessage, n.customClass.validationMessage), ot(e.validationMessage);
                        const o = this.getInput();
                        o && (o.setAttribute("aria-invalid", !0), o.setAttribute("aria-describedby", w["validation-message"]), X(o), Q(o, w.inputerror))
                    }

                    function kn() {
                        const t = qt.domCache.get(this);
                        t.validationMessage && it(t.validationMessage);
                        const e = this.getInput();
                        e && (e.removeAttribute("aria-invalid"), e.removeAttribute("aria-describedby"), tt(e, w.inputerror))
                    }

                    function xn() { return qt.domCache.get(this).progressSteps }
                    class Pn {
                        constructor(t, e) { this.callback = t, this.remaining = e, this.running = !1, this.start() }
                        start() { return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining }
                        stop() { return this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= new Date - this.started), this.remaining }
                        increase(t) { const e = this.running; return e && this.stop(), this.remaining += t, e && this.start(), this.remaining }
                        getTimerLeft() { return this.running && (this.stop(), this.start()), this.remaining }
                        isRunning() { return this.running }
                    }
                    var En = { email: (t, e) => /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid email address"), url: (t, e) => /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(t) ? Promise.resolve() : Promise.resolve(e || "Invalid URL") };

                    function Bn(t) { t.inputValidator || Object.keys(En).forEach((e => { t.input === e && (t.inputValidator = En[e]) })) }

                    function Vn(t) {
                        (!t.target || "string" == typeof t.target && !document.querySelector(t.target) || "string" != typeof t.target && !t.target.appendChild) && (s('Target parameter is not valid, defaulting to "body"'), t.target = "body")
                    }

                    function On(t) { Bn(t), t.showLoaderOnConfirm && !t.preConfirm && s("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"), Vn(t), "string" == typeof t.title && (t.title = t.title.split("\n").join("<br />")), Ct(t) }
                    const Sn = ["swal-title", "swal-html", "swal-footer"],
                        Tn = t => { const e = "string" == typeof t.template ? document.querySelector(t.template) : t.template; if (!e) return {}; const n = e.content; return Fn(n), Object.assign(Ln(n), jn(n), Dn(n), qn(n), Mn(n), In(n, Sn)) },
                        Ln = t => { const e = {}; return i(t.querySelectorAll("swal-param")).forEach((t => { Hn(t, ["name", "value"]); const n = t.getAttribute("name"); let o = t.getAttribute("value"); "boolean" == typeof Te[n] && "false" === o && (o = !1), "object" == typeof Te[n] && (o = JSON.parse(o)), e[n] = o })), e },
                        jn = t => {
                            const e = {};
                            return i(t.querySelectorAll("swal-button")).forEach((t => {
                                Hn(t, ["type", "color", "aria-label"]);
                                const n = t.getAttribute("type");
                                e["".concat(n, "ButtonText")] = t.innerHTML, e["show".concat(o(n), "Button")] = !0, t.hasAttribute("color") && (e["".concat(n, "ButtonColor")] = t.getAttribute("color")), t.hasAttribute("aria-label") && (e["".concat(n, "ButtonAriaLabel")] = t.getAttribute("aria-label"))
                            })), e
                        },
                        Dn = t => {
                            const e = {},
                                n = t.querySelector("swal-image");
                            return n && (Hn(n, ["src", "width", "height", "alt"]), n.hasAttribute("src") && (e.imageUrl = n.getAttribute("src")), n.hasAttribute("width") && (e.imageWidth = n.getAttribute("width")), n.hasAttribute("height") && (e.imageHeight = n.getAttribute("height")), n.hasAttribute("alt") && (e.imageAlt = n.getAttribute("alt"))), e
                        },
                        qn = t => {
                            const e = {},
                                n = t.querySelector("swal-icon");
                            return n && (Hn(n, ["type", "color"]), n.hasAttribute("type") && (e.icon = n.getAttribute("type")), n.hasAttribute("color") && (e.iconColor = n.getAttribute("color")), e.iconHtml = n.innerHTML), e
                        },
                        Mn = t => {
                            const e = {},
                                n = t.querySelector("swal-input");
                            n && (Hn(n, ["type", "label", "placeholder", "value"]), e.input = n.getAttribute("type") || "text", n.hasAttribute("label") && (e.inputLabel = n.getAttribute("label")), n.hasAttribute("placeholder") && (e.inputPlaceholder = n.getAttribute("placeholder")), n.hasAttribute("value") && (e.inputValue = n.getAttribute("value")));
                            const o = t.querySelectorAll("swal-input-option");
                            return o.length && (e.inputOptions = {}, i(o).forEach((t => {
                                Hn(t, ["value"]);
                                const n = t.getAttribute("value"),
                                    o = t.innerHTML;
                                e.inputOptions[n] = o
                            }))), e
                        },
                        In = (t, e) => {
                            const n = {};
                            for (const o in e) {
                                const i = e[o],
                                    s = t.querySelector(i);
                                s && (Hn(s, []), n[i.replace(/^swal-/, "")] = s.innerHTML.trim())
                            }
                            return n
                        },
                        Fn = t => {
                            const e = Sn.concat(["swal-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                            i(t.children).forEach((t => { const n = t.tagName.toLowerCase(); - 1 === e.indexOf(n) && s("Unrecognized element <".concat(n, ">")) }))
                        },
                        Hn = (t, e) => { i(t.attributes).forEach((n => {-1 === e.indexOf(n.name) && s(['Unrecognized attribute "'.concat(n.name, '" on <').concat(t.tagName.toLowerCase(), ">."), "".concat(e.length ? "Allowed attributes are: ".concat(e.join(", ")) : "To set the value, use HTML within the element.")]) })) },
                        Nn = 10,
                        _n = t => {
                            const e = C(),
                                n = x();
                            "function" == typeof t.willOpen && t.willOpen(n);
                            const o = window.getComputedStyle(document.body).overflowY;
                            Wn(e, n, t), setTimeout((() => { Rn(e, n) }), Nn), U() && (zn(e, t.scrollbarPadding, o), en()), R() || ye.previousActiveElement || (ye.previousActiveElement = document.activeElement), "function" == typeof t.didOpen && setTimeout((() => t.didOpen(n))), tt(e, w["no-transition"])
                        },
                        Un = t => {
                            const e = x();
                            if (t.target !== e) return;
                            const n = C();
                            e.removeEventListener(Pt, Un), n.style.overflowY = "auto"
                        },
                        Rn = (t, e) => { Pt && ut(e) ? (t.style.overflowY = "hidden", e.addEventListener(Pt, Un)) : t.style.overflowY = "auto" },
                        zn = (t, e, n) => { Ze(), e && "hidden" !== n && Ke(), setTimeout((() => { t.scrollTop = 0 })) },
                        Wn = (t, e, n) => { Q(t, n.showClass.backdrop), e.style.setProperty("opacity", "0", "important"), ot(e, "grid"), setTimeout((() => { Q(e, n.showClass.popup), e.style.removeProperty("opacity") }), Nn), Q([document.documentElement, document.body], w.shown), n.heightAuto && n.backdrop && !n.toast && Q([document.documentElement, document.body], w["height-auto"]) },
                        Kn = (t, e) => { "select" === e.input || "radio" === e.input ? Xn(t, e) : ["text", "email", "number", "tel", "textarea"].includes(e.input) && (d(e.inputValue) || m(e.inputValue)) && (ge(T()), $n(t, e)) },
                        Yn = (t, e) => {
                            const n = t.getInput();
                            if (!n) return null;
                            switch (e.input) {
                                case "checkbox":
                                    return Zn(n);
                                case "radio":
                                    return Gn(n);
                                case "file":
                                    return Jn(n);
                                default:
                                    return e.inputAutoTrim ? n.value.trim() : n.value
                            }
                        },
                        Zn = t => t.checked ? 1 : 0,
                        Gn = t => t.checked ? t.value : null,
                        Jn = t => t.files.length ? null !== t.getAttribute("multiple") ? t.files : t.files[0] : null,
                        Xn = (t, e) => {
                            const n = x(),
                                o = t => Qn[e.input](n, to(t), e);
                            d(e.inputOptions) || m(e.inputOptions) ? (ge(T()), p(e.inputOptions).then((e => { t.hideLoading(), o(e) }))) : "object" == typeof e.inputOptions ? o(e.inputOptions) : a("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(typeof e.inputOptions))
                        },
                        $n = (t, e) => {
                            const n = t.getInput();
                            it(n), p(e.inputValue).then((o => { n.value = "number" === e.input ? parseFloat(o) || 0 : "".concat(o), ot(n), n.focus(), t.hideLoading() })).catch((e => { a("Error in inputValue promise: ".concat(e)), n.value = "", ot(n), n.focus(), t.hideLoading() }))
                        },
                        Qn = {
                            select: (t, e, n) => {
                                const o = et(t, w.select),
                                    i = (t, e, o) => {
                                        const i = document.createElement("option");
                                        i.value = o, K(i, e), i.selected = eo(o, n.inputValue), t.appendChild(i)
                                    };
                                e.forEach((t => {
                                    const e = t[0],
                                        n = t[1];
                                    if (Array.isArray(n)) {
                                        const t = document.createElement("optgroup");
                                        t.label = e, t.disabled = !1, o.appendChild(t), n.forEach((e => i(t, e[1], e[0])))
                                    } else i(o, n, e)
                                })), o.focus()
                            },
                            radio: (t, e, n) => {
                                const o = et(t, w.radio);
                                e.forEach((t => {
                                    const e = t[0],
                                        i = t[1],
                                        s = document.createElement("input"),
                                        a = document.createElement("label");
                                    s.type = "radio", s.name = w.radio, s.value = e, eo(e, n.inputValue) && (s.checked = !0);
                                    const r = document.createElement("span");
                                    K(r, i), r.className = w.label, a.appendChild(s), a.appendChild(r), o.appendChild(a)
                                }));
                                const i = o.querySelectorAll("input");
                                i.length && i[0].focus()
                            }
                        },
                        to = t => { const e = []; return "undefined" != typeof Map && t instanceof Map ? t.forEach(((t, n) => { let o = t; "object" == typeof o && (o = to(o)), e.push([n, o]) })) : Object.keys(t).forEach((n => { let o = t[n]; "object" == typeof o && (o = to(o)), e.push([n, o]) })), e },
                        eo = (t, e) => e && e.toString() === t.toString(),
                        no = t => {
                            const e = qt.innerParams.get(t);
                            t.disableButtons(), e.input ? so(t, "confirm") : uo(t, !0)
                        },
                        oo = t => {
                            const e = qt.innerParams.get(t);
                            t.disableButtons(), e.returnInputValueOnDeny ? so(t, "deny") : ro(t, !1)
                        },
                        io = (e, n) => { e.disableButtons(), n(t.cancel) },
                        so = (t, e) => {
                            const n = qt.innerParams.get(t),
                                o = Yn(t, n);
                            n.inputValidator ? ao(t, o, e) : t.getInput().checkValidity() ? "deny" === e ? ro(t, o) : uo(t, o) : (t.enableButtons(), t.showValidationMessage(n.validationMessage))
                        },
                        ao = (t, e, n) => {
                            const o = qt.innerParams.get(t);
                            t.disableInput(), Promise.resolve().then((() => p(o.inputValidator(e, o.validationMessage)))).then((o => { t.enableButtons(), t.enableInput(), o ? t.showValidationMessage(o) : "deny" === n ? ro(t, e) : uo(t, e) }))
                        },
                        ro = (t, e) => {
                            const n = qt.innerParams.get(t || void 0);
                            n.showLoaderOnDeny && ge(L()), n.preDeny ? (qt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => p(n.preDeny(e, n.validationMessage)))).then((n => {!1 === n ? t.hideLoading() : t.closePopup({ isDenied: !0, value: void 0 === n ? e : n }) })).catch((e => lo(t || void 0, e)))) : t.closePopup({ isDenied: !0, value: e })
                        },
                        co = (t, e) => { t.closePopup({ isConfirmed: !0, value: e }) },
                        lo = (t, e) => { t.rejectPromise(e) },
                        uo = (t, e) => {
                            const n = qt.innerParams.get(t || void 0);
                            n.showLoaderOnConfirm && ge(), n.preConfirm ? (t.resetValidationMessage(), qt.awaitingPromise.set(t || void 0, !0), Promise.resolve().then((() => p(n.preConfirm(e, n.validationMessage)))).then((n => { rt(S()) || !1 === n ? t.hideLoading() : co(t, void 0 === n ? e : n) })).catch((e => lo(t || void 0, e)))) : co(t, e)
                        },
                        po = (t, e, n, o) => { e.keydownTarget && e.keydownHandlerAdded && (e.keydownTarget.removeEventListener("keydown", e.keydownHandler, { capture: e.keydownListenerCapture }), e.keydownHandlerAdded = !1), n.toast || (e.keydownHandler = e => fo(t, e, o), e.keydownTarget = n.keydownListenerCapture ? window : x(), e.keydownListenerCapture = n.keydownListenerCapture, e.keydownTarget.addEventListener("keydown", e.keydownHandler, { capture: e.keydownListenerCapture }), e.keydownHandlerAdded = !0) },
                        mo = (t, e, n) => {
                            const o = _();
                            if (o.length) return (e += n) === o.length ? e = 0 : -1 === e && (e = o.length - 1), o[e].focus();
                            x().focus()
                        },
                        ho = ["ArrowRight", "ArrowDown"],
                        go = ["ArrowLeft", "ArrowUp"],
                        fo = (t, e, n) => {
                            const o = qt.innerParams.get(t);
                            o && (o.stopKeydownPropagation && e.stopPropagation(), "Enter" === e.key ? bo(t, e, o) : "Tab" === e.key ? yo(e, o) : [...ho, ...go].includes(e.key) ? wo(e.key) : "Escape" === e.key && vo(e, o, n))
                        },
                        bo = (t, e, n) => {
                            if (!e.isComposing && e.target && t.getInput() && e.target.outerHTML === t.getInput().outerHTML) {
                                if (["textarea", "file"].includes(n.input)) return;
                                ue(), e.preventDefault()
                            }
                        },
                        yo = (t, e) => {
                            const n = t.target,
                                o = _();
                            let i = -1;
                            for (let t = 0; t < o.length; t++)
                                if (n === o[t]) { i = t; break }
                            t.shiftKey ? mo(e, i, -1) : mo(e, i, 1), t.stopPropagation(), t.preventDefault()
                        },
                        wo = t => {
                            if (![T(), L(), q()].includes(document.activeElement)) return;
                            const e = ho.includes(t) ? "nextElementSibling" : "previousElementSibling",
                                n = document.activeElement[e];
                            n && n.focus()
                        },
                        vo = (e, n, o) => { u(n.allowEscapeKey) && (e.preventDefault(), o(t.esc)) },
                        Co = (t, e, n) => { qt.innerParams.get(t).toast ? Ao(t, e, n) : (xo(e), Po(e), Eo(t, e, n)) },
                        Ao = (e, n, o) => {
                            n.popup.onclick = () => {
                                const n = qt.innerParams.get(e);
                                n.showConfirmButton || n.showDenyButton || n.showCancelButton || n.showCloseButton || n.timer || n.input || o(t.close)
                            }
                        };
                    let ko = !1;
                    const xo = t => { t.popup.onmousedown = () => { t.container.onmouseup = function(e) { t.container.onmouseup = void 0, e.target === t.container && (ko = !0) } } },
                        Po = t => { t.container.onmousedown = () => { t.popup.onmouseup = function(e) { t.popup.onmouseup = void 0, (e.target === t.popup || t.popup.contains(e.target)) && (ko = !0) } } },
                        Eo = (e, n, o) => {
                            n.container.onclick = i => {
                                const s = qt.innerParams.get(e);
                                ko ? ko = !1 : i.target === n.container && u(s.allowOutsideClick) && o(t.backdrop)
                            }
                        };

                    function Bo(t) {
                        let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        _e(Object.assign({}, e, t)), ye.currentInstance && (ye.currentInstance._destroy(), U() && nn()), ye.currentInstance = this;
                        const n = Vo(t, e);
                        On(n), Object.freeze(n), ye.timeout && (ye.timeout.stop(), delete ye.timeout), clearTimeout(ye.restoreFocusTimeout);
                        const o = So(this);
                        return ce(this, n), qt.innerParams.set(this, n), Oo(this, o, n)
                    }
                    const Vo = (t, e) => {
                            const n = Tn(t),
                                o = Object.assign({}, Te, e, n, t);
                            return o.showClass = Object.assign({}, Te.showClass, o.showClass), o.hideClass = Object.assign({}, Te.hideClass, o.hideClass), o
                        },
                        Oo = (e, n, o) => new Promise(((i, s) => {
                            const a = t => { e.closePopup({ isDismissed: !0, dismiss: t }) };
                            on.swalPromiseResolve.set(e, i), on.swalPromiseReject.set(e, s), n.confirmButton.onclick = () => no(e), n.denyButton.onclick = () => oo(e), n.cancelButton.onclick = () => io(e, a), n.closeButton.onclick = () => a(t.close), Co(e, n, a), po(e, ye, o, a), Kn(e, o), _n(o), To(ye, o, a), Lo(n, o), setTimeout((() => { n.container.scrollTop = 0 }))
                        })),
                        So = t => { const e = { popup: x(), container: C(), actions: M(), confirmButton: T(), denyButton: L(), cancelButton: q(), loader: D(), closeButton: H(), validationMessage: S(), progressSteps: O() }; return qt.domCache.set(t, e), e },
                        To = (t, e, n) => {
                            const o = F();
                            it(o), e.timer && (t.timeout = new Pn((() => { n("timer"), delete t.timeout }), e.timer), e.timerProgressBar && (ot(o), setTimeout((() => { t.timeout && t.timeout.running && dt(e.timer) }))))
                        },
                        Lo = (t, e) => { if (!e.toast) return u(e.allowEnterKey) ? void(jo(t, e) || mo(e, -1, 1)) : Do() },
                        jo = (t, e) => e.focusDeny && rt(t.denyButton) ? (t.denyButton.focus(), !0) : e.focusCancel && rt(t.cancelButton) ? (t.cancelButton.focus(), !0) : !(!e.focusConfirm || !rt(t.confirmButton) || (t.confirmButton.focus(), 0)),
                        Do = () => { document.activeElement && "function" == typeof document.activeElement.blur && document.activeElement.blur() };

                    function qo(t) {
                        const e = x(),
                            n = qt.innerParams.get(this);
                        if (!e || Y(e, n.hideClass.popup)) return s("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
                        const o = {};
                        Object.keys(t).forEach((e => { Ro.isUpdatableParameter(e) ? o[e] = t[e] : s('Invalid parameter to update: "'.concat(e, '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md')) }));
                        const i = Object.assign({}, n, o);
                        ce(this, i), qt.innerParams.set(this, i), Object.defineProperties(this, { params: { value: Object.assign({}, this.params, t), writable: !1, enumerable: !0 } })
                    }

                    function Mo() {
                        const t = qt.domCache.get(this),
                            e = qt.innerParams.get(this);
                        e ? (t.popup && ye.swalCloseEventFinishedCallback && (ye.swalCloseEventFinishedCallback(), delete ye.swalCloseEventFinishedCallback), ye.deferDisposalTimer && (clearTimeout(ye.deferDisposalTimer), delete ye.deferDisposalTimer), "function" == typeof e.didDestroy && e.didDestroy(), Io(this)) : Fo(this)
                    }
                    const Io = t => { Fo(t), delete t.params, delete ye.keydownHandler, delete ye.keydownTarget, delete ye.currentInstance },
                        Fo = t => { t.isAwaitingPromise() ? (Ho(qt, t), qt.awaitingPromise.set(t, !0)) : (Ho(on, t), Ho(qt, t)) },
                        Ho = (t, e) => { for (const n in t) t[n].delete(e) };
                    var No = Object.freeze({ hideLoading: Re, disableLoading: Re, getInput: We, close: rn, isAwaitingPromise: cn, rejectPromise: un, closePopup: rn, closeModal: rn, closeToast: rn, enableButtons: yn, disableButtons: wn, enableInput: vn, disableInput: Cn, showValidationMessage: An, resetValidationMessage: kn, getProgressSteps: xn, _main: Bo, update: qo, _destroy: Mo });
                    let _o;
                    class Uo {
                        constructor() {
                            if ("undefined" == typeof window) return;
                            _o = this;
                            for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
                            const o = Object.freeze(this.constructor.argsToParams(e));
                            Object.defineProperties(this, { params: { value: o, writable: !1, enumerable: !0, configurable: !0 } });
                            const i = this._main(this.params);
                            qt.promise.set(this, i)
                        }
                        then(t) { return qt.promise.get(this).then(t) } finally(t) { return qt.promise.get(this).finally(t) }
                    }
                    Object.assign(Uo.prototype, No), Object.assign(Uo, Ue), Object.keys(No).forEach((t => { Uo[t] = function() { if (_o) return _o[t](...arguments) } })), Uo.DismissReason = t, Uo.version = "11.3.0";
                    const Ro = Uo;
                    return Ro.default = Ro, Ro
                }(), void 0 !== this && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2)
            }
        },
        e = {};

    function n(o) { var i = e[o]; if (void 0 !== i) return i.exports; var s = e[o] = { exports: {} }; return t[o].call(s.exports, s, s.exports, n), s.exports }
    n.n = t => { var e = t && t.__esModule ? () => t.default : () => t; return n.d(e, { a: e }), e }, n.d = (t, e) => { for (var o in e) n.o(e, o) && !n.o(t, o) && Object.defineProperty(t, o, { enumerable: !0, get: e[o] }) }, n.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), (() => {
        "use strict";
        var t = n(764),
            e = n.n(t);

        function o(t, e) {
            var n = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var o = Object.getOwnPropertySymbols(t);
                e && (o = o.filter((function(e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), n.push.apply(n, o)
            }
            return n
        }

        function i(t, e, n) { return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t }

        function s(t, n) {
            e().fire(function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? o(Object(n), !0).forEach((function(e) { i(t, e, n[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : o(Object(n)).forEach((function(e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }))
                }
                return t
            }({ showClass: { popup: "fadeIn" }, hideClass: { popup: "fadeOut" }, showConfirmButton: !1, showCloseButton: !0, closeButtonHtml: '\n                <i class="icon-close"></i>\n            ', customClass: { container: "modal", popup: n ? "modal_popup ".concat(n) : "modal_popup", closeButton: "modal_popup-close", htmlContainer: "modal_popup-content" } }, t))
        }
        var a = function() {
                return (a = Object.assign || function(t) {
                    for (var e, n = 1, o = arguments.length; n < o; n++)
                        for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                }).apply(this, arguments)
            },
            r = function() {
                function t(t, e, n) {
                    var o = this;
                    this.target = t, this.endVal = e, this.options = n, this.version = "2.0.8", this.defaults = { startVal: 0, decimalPlaces: 0, duration: 2, useEasing: !0, useGrouping: !0, smartEasingThreshold: 999, smartEasingAmount: 333, separator: ",", decimal: ".", prefix: "", suffix: "" }, this.finalEndVal = null, this.useEasing = !0, this.countDown = !1, this.error = "", this.startVal = 0, this.paused = !0, this.count = function(t) {
                        o.startTime || (o.startTime = t);
                        var e = t - o.startTime;
                        o.remaining = o.duration - e, o.useEasing ? o.countDown ? o.frameVal = o.startVal - o.easingFn(e, 0, o.startVal - o.endVal, o.duration) : o.frameVal = o.easingFn(e, o.startVal, o.endVal - o.startVal, o.duration) : o.countDown ? o.frameVal = o.startVal - (o.startVal - o.endVal) * (e / o.duration) : o.frameVal = o.startVal + (o.endVal - o.startVal) * (e / o.duration), o.countDown ? o.frameVal = o.frameVal < o.endVal ? o.endVal : o.frameVal : o.frameVal = o.frameVal > o.endVal ? o.endVal : o.frameVal, o.frameVal = Number(o.frameVal.toFixed(o.options.decimalPlaces)), o.printValue(o.frameVal), e < o.duration ? o.rAF = requestAnimationFrame(o.count) : null !== o.finalEndVal ? o.update(o.finalEndVal) : o.callback && o.callback()
                    }, this.formatNumber = function(t) {
                        var e, n, i, s, a = t < 0 ? "-" : "";
                        e = Math.abs(t).toFixed(o.options.decimalPlaces);
                        var r = (e += "").split(".");
                        if (n = r[0], i = r.length > 1 ? o.options.decimal + r[1] : "", o.options.useGrouping) {
                            s = "";
                            for (var c = 0, l = n.length; c < l; ++c) 0 !== c && c % 3 == 0 && (s = o.options.separator + s), s = n[l - c - 1] + s;
                            n = s
                        }
                        return o.options.numerals && o.options.numerals.length && (n = n.replace(/[0-9]/g, (function(t) { return o.options.numerals[+t] })), i = i.replace(/[0-9]/g, (function(t) { return o.options.numerals[+t] }))), a + o.options.prefix + n + i + o.options.suffix
                    }, this.easeOutExpo = function(t, e, n, o) { return n * (1 - Math.pow(2, -10 * t / o)) * 1024 / 1023 + e }, this.options = a(a({}, this.defaults), n), this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber, this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo, this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.endVal = this.validateValue(e), this.options.decimalPlaces = Math.max(this.options.decimalPlaces), this.resetDuration(), this.options.separator = String(this.options.separator), this.useEasing = this.options.useEasing, "" === this.options.separator && (this.options.useGrouping = !1), this.el = "string" == typeof t ? document.getElementById(t) : t, this.el ? this.printValue(this.startVal) : this.error = "[CountUp] target is null or undefined"
                }
                return t.prototype.determineDirectionAndSmartEasing = function() {
                    var t = this.finalEndVal ? this.finalEndVal : this.endVal;
                    this.countDown = this.startVal > t;
                    var e = t - this.startVal;
                    if (Math.abs(e) > this.options.smartEasingThreshold) {
                        this.finalEndVal = t;
                        var n = this.countDown ? 1 : -1;
                        this.endVal = t + n * this.options.smartEasingAmount, this.duration = this.duration / 2
                    } else this.endVal = t, this.finalEndVal = null;
                    this.finalEndVal ? this.useEasing = !1 : this.useEasing = this.options.useEasing
                }, t.prototype.start = function(t) { this.error || (this.callback = t, this.duration > 0 ? (this.determineDirectionAndSmartEasing(), this.paused = !1, this.rAF = requestAnimationFrame(this.count)) : this.printValue(this.endVal)) }, t.prototype.pauseResume = function() { this.paused ? (this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) : cancelAnimationFrame(this.rAF), this.paused = !this.paused }, t.prototype.reset = function() { cancelAnimationFrame(this.rAF), this.paused = !0, this.resetDuration(), this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.printValue(this.startVal) }, t.prototype.update = function(t) { cancelAnimationFrame(this.rAF), this.startTime = null, this.endVal = this.validateValue(t), this.endVal !== this.frameVal && (this.startVal = this.frameVal, this.finalEndVal || this.resetDuration(), this.finalEndVal = null, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) }, t.prototype.printValue = function(t) { var e = this.formattingFn(t); "INPUT" === this.el.tagName ? this.el.value = e : "text" === this.el.tagName || "tspan" === this.el.tagName ? this.el.textContent = e : this.el.innerHTML = e }, t.prototype.ensureNumber = function(t) { return "number" == typeof t && !isNaN(t) }, t.prototype.validateValue = function(t) { var e = Number(t); return this.ensureNumber(e) ? e : (this.error = "[CountUp] invalid start or end value: " + t, null) }, t.prototype.resetDuration = function() { this.startTime = null, this.duration = 1e3 * Number(this.options.duration), this.remaining = this.duration }, t
            }();

        function c(t) { var e = t.getBoundingClientRect(); return e.bottom < 0 || e.right < 0 || e.left > window.innerWidth || e.top > window.innerHeight }
        const l = function() {
            for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ".countNum", e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1.5, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, o = document.querySelectorAll(t), i = function(t) {
                    var i = o[t],
                        s = +i.dataset.value,
                        a = { prefix: i.dataset.prefix ? i.dataset.prefix : "", suffix: i.dataset.suffix ? i.dataset.suffix : "", separator: i.dataset.separator ? i.dataset.separator : "", duration: e, startVal: n },
                        l = new r(i, s, a);

                    function u() { c(i) || l.start() }
                    u(), window.addEventListener("scroll", u)
                }, s = 0; s < o.length; s++) i(s)
        };
        document.addEventListener("DOMContentLoaded", (function() {
            ! function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ".team_list-item",
                    e = document.querySelectorAll(t),
                    n = document.querySelectorAll("".concat(t, " .name")),
                    o = document.querySelectorAll("".concat(t, " .profession"));
                e.forEach((function(t, e) {
                    var i = t.dataset.media;
                    t.addEventListener("click", (function() { s({ html: '\n                    <div class="wrapper d-md-flex align-items-start align-items-lg-stretch">\n                        <div class="media">\n                            <picture>\n                                <source data-srcset="'.concat(i, '.jpg"\n                                        srcset="').concat(i, '.webp">\n                                <img class="lazy"\n                                     data-src="').concat(i, '.jpg"\n                                     src="').concat(i, '.jpg"\n                                     alt="media">\n                            </picture>\n                        </div>\n                        <div class="main d-flex flex-column justify-content-between">\n                            <h3 class="main_name">').concat(n[e].textContent, '</h3>\n                            <span class="main_text text">').concat(o[e].textContent, '</span>\n                            <ul class="main_socials d-flex align-items-center">\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-facebook icon"></i>\n                                    </a>\n                                </li>\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-youtube-play icon"></i>\n                                    </a>\n                                </li>\n                                <li class="main_socials-item">\n                                    <a class="link" href="#" target="_blank" rel="noopener noreferrer">\n                                        <i class="icon-linkedin-brands icon"></i>\n                                    </a>\n                                </li>\n                            </ul>\n                            <p class="main_bio">\n                                Donec justo odio, tempus nec risus et, varius tempor turpis. Praesent quam tellus, interdum\n                                 vitae mi ut, condimentum tristique nisi. Quisque lobortis leo odio. Nullam eu sapien ullamcorper,\n                                  eleifend lorem ultricies, commodo ligula. Nunc a mauris congue elit auctor ullamcorpert\n                            </p>\n                            <div class="main_about d-flex flex-column">\n                                <span class="main_about-item">\n                                    <i class="icon-book-solid icon"></i>\n                                    <span class="text">12</span> Instructor  SMS\n                                </span>\n                                <span class="main_about-item">\n                                    <i class="icon-users icon"></i>\n                                    <span class="text">58,586</span> Learners\n                                </span>\n                            </div>\n                            <a class="main_btn" href="SMS.html">View SMS <i class="icon-arrow-right-solid icon"></i></a>\n                        </div>\n                    </div> \n            ') }, "modal_popup--team") }))
                }))
            }(), l()
        }))
    })()
})();